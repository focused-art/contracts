/*                                          */
/*               FA2 Protocol               */
/*                                          */
/*      Built by Codecrafting <â™¥> Labs      */
/*                                          */

#import "types.jsligo" "T"
#import "Views.jsligo" "V"
#import "entrypoints.jsligo" "E"

@entry
const main = (action: T.entry_action, s: T.storage): T.@return => {
  assert_with_error(Tezos.get_amount() == 0mutez, "FA2_DONT_SEND_TEZ");
  return match(action) {
    when(Permitted(params)):            E.Permitted.entrypoint(params, s);
    when(Init(params)):                 E.Init.entrypoint(params, None(), s);
    when(Transfer_ownership(params)):   E.TransferOwnership.entrypoint(params, None(), s);
    when(Update_roles(params)):         E.UpdateRoles.entrypoint(params, None(), s);
    when(Renounce_roles(params)):       E.RenounceRoles.entrypoint(params, None(), s);
    when(Update_hooks(params)):         E.UpdateHooks.entrypoint(params, None(), s);
    when(Confirm_ownership(params)):    E.ConfirmOwnership.entrypoint(params, None(), s);
    when(Migrate_to_protocol(params)):  E.MigrateToProtocol.entrypoint(params, s);
  };
};

@view
const get_owner = V.get_owner;

@view
const is_owner = V.is_owner;

@view
const has_role = V.has_role;

@view
const get_hooks = V.get_hooks;

@view
const is_revocable = V.is_revocable;
