type permissions =
// @layout comb
{
  owner                 : trusted,
  pending_owner         : option<address>,
  creator               : set<trusted>,
  minter                : set<trusted>,
  metadata_manager      : set<trusted>,
  royalties_manager     : set<trusted>
};

type revocable = bool;

type hooks =
// @layout comb
{
  transfer              : set<trusted>,
  create                : set<trusted>,
  mint                  : set<trusted>,
  burn                  : set<trusted>,
  update_metadata       : set<trusted>
};

type fa2_storage =
// @layout comb
{
  metadata              : big_map<string, bytes>,
  protocol              : trusted,
  next_token_id         : nat,
  token_total_supply    : big_map<token_id, nat>,
  ledger                : big_map<[owner, token_id], nat>,
  operators             : big_map<[owner, ([operator, token_id])], unit>,
  token_metadata        : big_map<token_id, token_metadata>,
  royalties             : big_map<token_id, royalties>,
  token_max_supply      : big_map<token_id, nat>,
  default_royalties     : royalties
};

type create_fa2 =
  (v: ([option<key_hash>, tez, fa2_storage])) => (
    [operation, address]
  );

// contract storage
type storage =
// @layout comb
{
  metadata              : big_map<string, bytes>,
  roles                 : big_map<contract_address, permissions>,
  hooks                 : big_map<contract_address, hooks>,
  protocol_hooks        : hooks
};

// define return type for readability
type @return = [op_list, storage];

type update_role_param =
  | ["Add", role_type, trusted]
  | ["Remove", role_type, trusted];

type update_roles_params =
  list<([contract_address, update_role_param])>;

type renounce_role_params =
  | ["Ownership", unit]
  | ["Creator", unit]
  | ["Minter", unit]
  | ["Metadata_manager", unit]
  | ["Royalties_manager", unit];

type renounce_roles_params =
  list<([contract_address, renounce_role_params])>;

type update_hook_param =
  | ["Add", hook_type, trusted]
  | ["Remove", hook_type, trusted];

type update_hooks_params =
  list<([contract_address, update_hook_param])>;

type entry_action =
  | ["Init", metadata]
  | ["Transfer_ownership", contract_address, trusted]
  | ["Update_roles", update_roles_params]
  | ["Renounce_roles", renounce_roles_params]
  | ["Update_hooks", update_hooks_params]
  | ["Confirm_ownership", contract_address];

