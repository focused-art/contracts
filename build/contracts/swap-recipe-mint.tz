{ parameter
    (or (or (pair %create_swap
               (pair %token (address %address) (nat %token_id))
               (pair %recipe
                  (set %burns (pair (pair %token (address %address) (nat %token_id)) (nat %amount)))
                  (map %transfers
                     (pair (pair %token (address %address) (nat %token_id)) (nat %amount))
                     address))
               (mutez %price)
               (map %recipients address nat)
               (timestamp %start_time)
               (int %duration)
               (nat %max_supply)
               (nat %max_per_block)
               (nat %max_per_wallet))
            (pair %mint (pair nat nat) address))
        (or %swap_owner_action
           (nat %cancel_swap)
           (or %swap_update_action
              (or (or (pair %pause_swap nat bool) (pair %update_duration nat int))
                  (or (pair %update_max_per_block nat nat) (pair %update_max_per_wallet nat nat)))
              (or (or (pair %update_price nat mutez) (pair %update_recipients nat (map address nat)))
                  (pair %update_start_time nat timestamp))))) ;
  storage
    (pair (big_map %metadata string bytes)
          (big_map %swaps
             nat
             (pair (address %owner)
                   (bool %paused)
                   (pair %token (address %address) (nat %token_id))
                   (pair %recipe
                      (set %burns (pair (pair %token (address %address) (nat %token_id)) (nat %amount)))
                      (map %transfers
                         (pair (pair %token (address %address) (nat %token_id)) (nat %amount))
                         address))
                   (mutez %price)
                   (map %recipients address nat)
                   (nat %minted)
                   (timestamp %start_time)
                   (int %duration)
                   (nat %max_supply)
                   (nat %max_per_block)
                   (nat %max_per_wallet)))
          (nat %next_swap_id)
          (big_map %ledger
             (pair address nat)
             (pair (nat %total_minted) (mutez %total_paid) (nat %last_block) (nat %block_minted)))) ;
  code { NIL operation ;
         LAMBDA
           (pair (pair (pair address nat) address) address nat)
           operation
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             DUP 3 ;
             CAR ;
             CONTRACT %transfer
               (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "FA_CANNOT_INVOKE_FA2_TRANSFER" ; FAILWITH } {} ;
             PUSH mutez 0 ;
             NIL (pair address (list (pair address nat nat))) ;
             NIL (pair address nat nat) ;
             DIG 5 ;
             DIG 6 ;
             CDR ;
             DIG 6 ;
             PAIR 3 ;
             CONS ;
             DIG 4 ;
             PAIR ;
             CONS ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair address mutez)
           operation
           { UNPAIR ;
             CONTRACT unit ;
             IF_NONE { PUSH string "FA_INVALID_TEZ_DESTINATION" ; FAILWITH } {} ;
             SWAP ;
             UNIT ;
             TRANSFER_TOKENS } ;
         LAMBDA
           (pair nat
                 (big_map string bytes)
                 (big_map
                    nat
                    (pair address
                          bool
                          (pair address nat)
                          (pair (set (pair (pair address nat) nat)) (map (pair (pair address nat) nat) address))
                          mutez
                          (map address nat)
                          nat
                          timestamp
                          int
                          nat
                          nat
                          nat))
                 nat
                 (big_map (pair address nat) (pair nat mutez nat nat)))
           (pair address
                 bool
                 (pair address nat)
                 (pair (set (pair (pair address nat) nat)) (map (pair (pair address nat) nat) address))
                 mutez
                 (map address nat)
                 nat
                 timestamp
                 int
                 nat
                 nat
                 nat)
           { UNPAIR ;
             SWAP ;
             GET 3 ;
             SWAP ;
             GET ;
             IF_NONE { PUSH string "FA_INVALID_SWAP_ID" ; FAILWITH } {} } ;
         DIG 4 ;
         UNPAIR ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DIG 3 ;
                 DIG 4 ;
                 DROP 3 ;
                 SWAP ;
                 PUSH string "FA_SELLER_NOT_FA2_OWNER" ;
                 SENDER ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 VIEW "is_owner" bool ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { DROP } { FAILWITH } ;
                 PUSH string "FA_SELF_NOT_FA2_MINTER" ;
                 SELF_ADDRESS ;
                 DUP 4 ;
                 CAR ;
                 CAR ;
                 SWAP ;
                 VIEW "is_minter" bool ;
                 IF_NONE { PUSH bool False } {} ;
                 IF { DROP } { FAILWITH } ;
                 EMPTY_MAP address nat ;
                 PUSH mutez 0 ;
                 DUP 4 ;
                 GET 5 ;
                 COMPARE ;
                 GT ;
                 IF { DROP ;
                      PUSH nat 0 ;
                      DUP 3 ;
                      GET 7 ;
                      ITER { CDR ; ADD } ;
                      PUSH string "FA_INVALID_RECIPIENT_PCTS" ;
                      PUSH nat 10000 ;
                      DIG 2 ;
                      COMPARE ;
                      EQ ;
                      IF { DROP } { FAILWITH } ;
                      DUP 2 ;
                      GET 7 }
                    {} ;
                 DUP 2 ;
                 DUP 3 ;
                 GET 3 ;
                 DUP 5 ;
                 GET 16 ;
                 DUP 6 ;
                 GET 15 ;
                 DUP 7 ;
                 GET 13 ;
                 DUP 8 ;
                 GET 11 ;
                 DUP 9 ;
                 GET 9 ;
                 PUSH nat 0 ;
                 DIG 8 ;
                 DUP 11 ;
                 GET 5 ;
                 DUP 12 ;
                 GET 3 ;
                 DIG 12 ;
                 CAR ;
                 PUSH bool False ;
                 SENDER ;
                 PAIR 12 ;
                 DIG 3 ;
                 GET 5 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 DUP ;
                 PUSH nat 1 ;
                 DIG 2 ;
                 GET 5 ;
                 ADD ;
                 UPDATE 5 }
               { DIG 5 ;
                 DROP ;
                 DUP ;
                 CAR ;
                 CDR ;
                 DUP 2 ;
                 CAR ;
                 CAR ;
                 DIG 3 ;
                 DUP ;
                 DUP 3 ;
                 PAIR ;
                 DIG 5 ;
                 SWAP ;
                 EXEC ;
                 PUSH bool False ;
                 DUP 2 ;
                 GET 3 ;
                 COMPARE ;
                 EQ ;
                 IF {} { PUSH string "FA_SWAP_PAUSED" ; FAILWITH } ;
                 PUSH string "FA_SWAP_NOT_STARTED" ;
                 DUP 2 ;
                 GET 15 ;
                 NOW ;
                 COMPARE ;
                 GE ;
                 IF { DROP } { FAILWITH } ;
                 PUSH int 0 ;
                 DUP 2 ;
                 GET 17 ;
                 COMPARE ;
                 GT ;
                 IF { PUSH string "FA_SWAP_ENDED" ;
                      DUP 2 ;
                      GET 17 ;
                      DUP 3 ;
                      GET 15 ;
                      ADD ;
                      NOW ;
                      COMPARE ;
                      LT ;
                      IF { DROP } { FAILWITH } }
                    {} ;
                 DUP ;
                 GET 19 ;
                 DUP 5 ;
                 DUP 3 ;
                 GET 5 ;
                 DUP ;
                 CAR ;
                 SWAP ;
                 CDR ;
                 VIEW "total_supply" nat ;
                 IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                 ADD ;
                 COMPARE ;
                 GT ;
                 PUSH nat 0 ;
                 DUP 3 ;
                 GET 19 ;
                 COMPARE ;
                 GT ;
                 AND ;
                 IF { PUSH string "FA_MAX_SUPPLY_EXCEEDED" ; FAILWITH } {} ;
                 DUP 4 ;
                 DUP 2 ;
                 GET 9 ;
                 MUL ;
                 AMOUNT ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH string "FA_INVALID_TEZ_AMOUNT" ; FAILWITH } {} ;
                 DUP 2 ;
                 DUP 4 ;
                 SENDER ;
                 PAIR ;
                 SWAP ;
                 GET 6 ;
                 SWAP ;
                 GET ;
                 IF_NONE
                   { PUSH nat 0 ; PUSH nat 0 ; PUSH mutez 0 ; PUSH nat 0 ; PAIR 4 }
                   {} ;
                 DUP 2 ;
                 GET 22 ;
                 DUP 6 ;
                 DUP 3 ;
                 CAR ;
                 ADD ;
                 COMPARE ;
                 GT ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 GET 22 ;
                 COMPARE ;
                 GT ;
                 AND ;
                 IF { PUSH string "FA_MAX_MINT_PER_WALLET_EXCEEDED" ; FAILWITH } {} ;
                 LEVEL ;
                 DUP 2 ;
                 GET 5 ;
                 COMPARE ;
                 NEQ ;
                 IF { PUSH nat 0 ; UPDATE 6 ; LEVEL ; UPDATE 5 } {} ;
                 DUP 2 ;
                 GET 21 ;
                 DUP 6 ;
                 DUP 3 ;
                 GET 6 ;
                 ADD ;
                 COMPARE ;
                 GT ;
                 PUSH nat 0 ;
                 DUP 4 ;
                 GET 21 ;
                 COMPARE ;
                 GT ;
                 AND ;
                 IF { PUSH string "FA_MAX_MINT_PER_BLOCK_EXCEEDED" ; FAILWITH } {} ;
                 NIL operation ;
                 DUP 3 ;
                 GET 5 ;
                 DUP ;
                 CAR ;
                 CONTRACT %mint (list (pair (address %owner) (nat %token_id) (nat %amount))) ;
                 IF_NONE
                   { DIG 7 ; DROP 2 ; PUSH string "FA_MINT_ENTRYPOINT_UNDEFINED" ; FAILWITH }
                   { PUSH mutez 0 ;
                     NIL (pair address nat nat) ;
                     DUP 10 ;
                     DIG 4 ;
                     CDR ;
                     DIG 11 ;
                     CDR ;
                     PAIR 3 ;
                     CONS ;
                     TRANSFER_TOKENS } ;
                 CONS ;
                 DUP 3 ;
                 GET 7 ;
                 CAR ;
                 ITER { SWAP ;
                        DUP 7 ;
                        DUP 3 ;
                        CDR ;
                        MUL ;
                        SENDER ;
                        DIG 3 ;
                        CAR ;
                        DUP ;
                        CAR ;
                        CONTRACT %burn (list (pair (address %owner) (nat %token_id) (nat %amount))) ;
                        IF_NONE
                          { DIG 2 ;
                            PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                            PAIR ;
                            DUG 2 ;
                            PAIR ;
                            PAIR ;
                            DUP 9 ;
                            SWAP ;
                            EXEC }
                          { PUSH mutez 0 ;
                            NIL (pair address nat nat) ;
                            DIG 5 ;
                            DIG 4 ;
                            CDR ;
                            DIG 5 ;
                            PAIR 3 ;
                            CONS ;
                            TRANSFER_TOKENS } ;
                        CONS } ;
                 DUP 3 ;
                 GET 7 ;
                 CDR ;
                 ITER { UNPAIR ;
                        DIG 2 ;
                        DUP 8 ;
                        DUP 3 ;
                        CDR ;
                        MUL ;
                        DIG 3 ;
                        PAIR ;
                        SENDER ;
                        DIG 3 ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        DUP 9 ;
                        SWAP ;
                        EXEC ;
                        CONS } ;
                 DIG 7 ;
                 DROP ;
                 PUSH mutez 0 ;
                 DUP 4 ;
                 GET 9 ;
                 COMPARE ;
                 GT ;
                 IF { AMOUNT ;
                      PAIR ;
                      DUP 3 ;
                      GET 11 ;
                      DUP 4 ;
                      GET 5 ;
                      DIG 2 ;
                      UNPAIR ;
                      DUP ;
                      PUSH mutez 1 ;
                      SWAP ;
                      EDIV ;
                      IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                      CAR ;
                      DIG 3 ;
                      DUP ;
                      CAR ;
                      SWAP ;
                      CDR ;
                      VIEW "get_royalties" (pair (nat %total_shares) (map %shares address nat)) ;
                      IF_NONE { PUSH string "option is None" ; FAILWITH } {} ;
                      SWAP ;
                      PAIR ;
                      EMPTY_MAP address nat ;
                      PUSH nat 0 ;
                      DUP 3 ;
                      CDR ;
                      CAR ;
                      COMPARE ;
                      GT ;
                      IF { PUSH nat 0 ;
                           DUP 3 ;
                           CDR ;
                           CDR ;
                           ITER { UNPAIR ;
                                  DUP 2 ;
                                  DIG 3 ;
                                  ADD ;
                                  DUG 2 ;
                                  DIG 3 ;
                                  DUP 5 ;
                                  CDR ;
                                  CAR ;
                                  DIG 3 ;
                                  DUP 6 ;
                                  CAR ;
                                  MUL ;
                                  EDIV ;
                                  IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                  CAR ;
                                  DIG 2 ;
                                  SWAP ;
                                  SOME ;
                                  SWAP ;
                                  UPDATE ;
                                  SWAP } ;
                           PUSH string "INVALID_SHARE_VALUES" ;
                           DIG 3 ;
                           CDR ;
                           CAR ;
                           DIG 2 ;
                           COMPARE ;
                           LE ;
                           IF { DROP } { FAILWITH } }
                         { SWAP ; DROP } ;
                      PUSH mutez 0 ;
                      SWAP ;
                      ITER { UNPAIR ;
                             PUSH mutez 0 ;
                             DUP 5 ;
                             COMPARE ;
                             GT ;
                             PUSH nat 0 ;
                             DUP 4 ;
                             COMPARE ;
                             GT ;
                             AND ;
                             IF { PUSH mutez 1 ;
                                  DIG 2 ;
                                  MUL ;
                                  DIG 4 ;
                                  DUP 2 ;
                                  DIG 3 ;
                                  PAIR ;
                                  DUP 12 ;
                                  SWAP ;
                                  EXEC ;
                                  CONS ;
                                  DUG 3 ;
                                  ADD }
                                { DROP 2 } } ;
                      PUSH mutez 0 ;
                      DUP 2 ;
                      COMPARE ;
                      GT ;
                      IF { SWAP ;
                           SUB_MUTEZ ;
                           IF_NONE { PUSH string "option is None" ; FAILWITH } {} }
                         { DROP } ;
                      PUSH mutez 0 ;
                      DUP 2 ;
                      COMPARE ;
                      GT ;
                      IF { PUSH nat 1 ;
                           PUSH mutez 0 ;
                           DUP 5 ;
                           ITER { UNPAIR ;
                                  DUP 7 ;
                                  SIZE ;
                                  DUP 5 ;
                                  COMPARE ;
                                  EQ ;
                                  IF { SWAP ;
                                       DROP ;
                                       DUP 2 ;
                                       DUP 5 ;
                                       SUB_MUTEZ ;
                                       IF_NONE { PUSH string "option is None" ; FAILWITH } {} }
                                     { PUSH nat 10000 ;
                                       DIG 2 ;
                                       DUP 6 ;
                                       MUL ;
                                       EDIV ;
                                       IF_NONE { PUSH string "DIV by 0" ; FAILWITH } {} ;
                                       CAR } ;
                                  PUSH mutez 0 ;
                                  DUP 2 ;
                                  COMPARE ;
                                  GT ;
                                  IF { DIG 5 ; DUP 2 ; DIG 3 ; PAIR ; DUP 13 ; SWAP ; EXEC ; CONS ; DUG 4 ; ADD }
                                     { DROP 2 } ;
                                  PUSH nat 1 ;
                                  DIG 2 ;
                                  ADD ;
                                  SWAP } ;
                           SWAP ;
                           DIG 2 ;
                           DIG 4 ;
                           DIG 10 ;
                           DROP 5 }
                         { DIG 2 ; DIG 8 ; DROP 3 } }
                    { DIG 6 ; DROP } ;
                 DUP 2 ;
                 DUP 7 ;
                 DIG 3 ;
                 CAR ;
                 ADD ;
                 UPDATE 1 ;
                 SWAP ;
                 DUP 2 ;
                 DUP 7 ;
                 DIG 3 ;
                 GET 6 ;
                 ADD ;
                 UPDATE 6 ;
                 SWAP ;
                 DUP 2 ;
                 AMOUNT ;
                 DIG 3 ;
                 GET 3 ;
                 ADD ;
                 UPDATE 3 ;
                 SWAP ;
                 DUP 4 ;
                 DIG 4 ;
                 GET 6 ;
                 DIG 3 ;
                 DUP 6 ;
                 SENDER ;
                 PAIR ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 6 ;
                 DUG 2 ;
                 DUP 2 ;
                 DIG 5 ;
                 DIG 3 ;
                 GET 13 ;
                 ADD ;
                 UPDATE 13 ;
                 DUP 3 ;
                 DIG 3 ;
                 GET 3 ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 } }
           { DIG 3 ;
             DIG 4 ;
             DROP 2 ;
             SWAP ;
             DUP 2 ;
             IF_LEFT
               {}
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT { CAR } { CAR } }
                       { IF_LEFT { CAR } { CAR } } }
                   { IF_LEFT { IF_LEFT { CAR } { CAR } } { CAR } } } ;
             PUSH string "FA_INVALID_SWAP_OWNER_ACCESS" ;
             DUP 3 ;
             SENDER ;
             DUP 4 ;
             PAIR ;
             SWAP ;
             GET 3 ;
             DUP 2 ;
             CAR ;
             GET ;
             IF_NONE
               { DROP ; PUSH bool False }
               { SWAP ; CDR ; SWAP ; CAR ; COMPARE ; EQ } ;
             IF { DROP } { FAILWITH } ;
             DUP 2 ;
             DUP 2 ;
             PAIR ;
             DIG 4 ;
             SWAP ;
             EXEC ;
             DUP 3 ;
             DIG 4 ;
             IF_LEFT
               { DIG 2 ;
                 DROP 2 ;
                 DIG 2 ;
                 GET 3 ;
                 DIG 2 ;
                 NONE (pair address
                            bool
                            (pair address nat)
                            (pair (set (pair (pair address nat) nat)) (map (pair (pair address nat) nat) address))
                            mutez
                            (map address nat)
                            nat
                            timestamp
                            int
                            nat
                            nat
                            nat) ;
                 SWAP ;
                 UPDATE }
               { IF_LEFT
                   { IF_LEFT
                       { IF_LEFT
                           { DIG 2 ; SWAP ; CDR ; UPDATE 3 }
                           { DIG 2 ; SWAP ; CDR ; UPDATE 17 } }
                       { IF_LEFT
                           { DIG 2 ; SWAP ; CDR ; UPDATE 21 }
                           { DIG 2 ; SWAP ; CDR ; UPDATE 22 } } }
                   { IF_LEFT
                       { IF_LEFT
                           { DIG 2 ; SWAP ; CDR ; UPDATE 9 }
                           { DIG 2 ; SWAP ; CDR ; UPDATE 11 } }
                       { DIG 2 ; SWAP ; CDR ; UPDATE 15 } } ;
                 DUP 4 ;
                 DIG 4 ;
                 GET 3 ;
                 DIG 2 ;
                 DIG 4 ;
                 SWAP ;
                 SOME ;
                 SWAP ;
                 UPDATE ;
                 UPDATE 3 ;
                 GET 3 } ;
             UPDATE 3 } ;
         SWAP ;
         PAIR } ;
  view "get_swap_owner"
       nat
       address
       { UNPAIR ;
         SWAP ;
         GET 3 ;
         SWAP ;
         GET ;
         IF_NONE { PUSH string "FA_INVALID_SWAP_ID" ; FAILWITH } { CAR } } ;
  view "is_swap_owner"
       (pair nat address)
       bool
       { UNPAIR ;
         SWAP ;
         GET 3 ;
         DUP 2 ;
         CAR ;
         GET ;
         IF_NONE
           { DROP ; PUSH bool False }
           { SWAP ; CDR ; SWAP ; CAR ; COMPARE ; EQ } } }

