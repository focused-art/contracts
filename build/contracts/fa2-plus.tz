{ parameter
    (or (or (or (or (or %assets
                       (or (list %assert_balances (pair (address %owner) (nat %token_id) (nat %balance)))
                           (pair %balance_of
                              (list %requests (pair (address %owner) (nat %token_id)))
                              (contract %callback
                                 (list (pair (pair %request (address %owner) (nat %token_id)) (nat %balance))))))
                       (or (list %transfer
                              (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
                           (list %update_operators
                              (or (pair %add_operator (address %owner) (address %operator) (nat %token_id))
                                  (pair %remove_operator (address %owner) (address %operator) (nat %token_id))))))
                    (list %burn (pair (address %owner) (nat %token_id) (nat %amount))))
                (or (unit %confirm_ownership)
                    (or %creator_action
                       (pair %create
                          (pair %token_metadata (nat %token_id) (map %token_info string bytes))
                          (pair %royalties (nat %total_shares) (map %shares address nat)))
                       (unit %renounce_creator))))
            (or (or (list %internal_transfer_hook
                       (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount)))))
                    (or %metadata_manager_action
                       (unit %renounce_metadata_manager)
                       (map %update_metadata nat (pair (nat %token_id) (map %token_info string bytes)))))
                (or (or %minter_action
                       (list %mint (pair (address %owner) (nat %token_id) (nat %amount)))
                       (unit %renounce_minter))
                    (or %owner_action
                       (or (or (or (address %add_creator) (address %add_metadata_manager))
                               (or (address %add_minter) (address %add_royalties_manager)))
                           (or (or (address %add_transfer_hook) (address %remove_creator))
                               (or (address %remove_metadata_manager) (address %remove_minter))))
                       (or (or (address %remove_royalties_manager) (address %remove_transfer_hook))
                           (or (unit %renounce_ownership) (address %transfer_ownership)))))))
        (or %royalties_manager_action
           (or (unit %renounce_royalties_manager)
               (pair %update_default_royalties (nat %total_shares) (map %shares address nat)))
           (map %update_royalties nat (pair (nat %total_shares) (map %shares address nat))))) ;
  storage
    (pair (big_map %metadata string bytes)
          (pair %roles
             (pair (pair (set %creator address) (set %metadata_manager address))
                   (set %minter address)
                   (address %owner))
             (pair (option %pending_owner address) (set %royalties_manager address))
             (set %transfer_hook address))
          (pair %assets
             (pair (pair (big_map %ledger (pair address nat) nat) (nat %next_token_id))
                   (big_map %operators (pair address address nat) unit)
                   (big_map %royalties nat (pair (nat %total_shares) (map %shares address nat))))
             (big_map %token_metadata nat (pair (nat %token_id) (map %token_info string bytes)))
             (big_map %token_total_supply nat nat))
          (pair %default_royalties (nat %total_shares) (map %shares address nat))) ;
  code { LAMBDA
           (pair nat
                 (pair (pair (big_map (pair address nat) nat) nat)
                       (big_map (pair address address nat) unit)
                       (big_map nat (pair nat (map address nat))))
                 (big_map nat (pair nat (map string bytes)))
                 (big_map nat nat))
           nat
           { UNPAIR ; SWAP ; CDR ; CDR ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair address nat)
                 (pair (pair (big_map (pair address nat) nat) nat)
                       (big_map (pair address address nat) unit)
                       (big_map nat (pair nat (map address nat))))
                 (big_map nat (pair nat (map string bytes)))
                 (big_map nat nat))
           nat
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             CAR ;
             CAR ;
             CAR ;
             DUG 2 ;
             PAIR ;
             GET ;
             IF_NONE { PUSH nat 0 } {} } ;
         LAMBDA
           (pair (pair address address)
                 nat
                 (pair (pair (big_map (pair address nat) nat) nat)
                       (big_map (pair address address nat) unit)
                       (big_map nat (pair nat (map address nat))))
                 (big_map nat (pair nat (map string bytes)))
                 (big_map nat nat))
           unit
           { UNPAIR ;
             UNPAIR ;
             DIG 2 ;
             UNPAIR ;
             PUSH bool False ;
             DIG 2 ;
             CAR ;
             CDR ;
             CAR ;
             DIG 2 ;
             DUP 5 ;
             PAIR ;
             DUP 4 ;
             PAIR ;
             MEM ;
             DIG 3 ;
             DIG 3 ;
             COMPARE ;
             EQ ;
             OR ;
             COMPARE ;
             EQ ;
             IF { PUSH string "FA2_NOT_OPERATOR" ; FAILWITH } { UNIT } } ;
         LAMBDA
           address
           unit
           { SENDER ;
             COMPARE ;
             NEQ ;
             IF { PUSH string "FA2_NOT_OWNER" ; FAILWITH } { UNIT } } ;
         LAMBDA
           (pair nat
                 (pair (pair (big_map (pair address nat) nat) nat)
                       (big_map (pair address address nat) unit)
                       (big_map nat (pair nat (map address nat))))
                 (big_map nat (pair nat (map string bytes)))
                 (big_map nat nat))
           unit
           { UNPAIR ;
             SWAP ;
             CAR ;
             CAR ;
             CDR ;
             SWAP ;
             COMPARE ;
             GE ;
             IF { PUSH string "FA2_TOKEN_UNDEFINED" ; FAILWITH } { UNIT } } ;
         NIL operation ;
         LAMBDA
           address
           (contract (list (pair address (list (pair address nat nat)))))
           { CONTRACT %transfer_hook
               (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
             IF_NONE { PUSH string "FA2_TRANSFER_HOOK_UNDEFINED" ; FAILWITH } {} } ;
         DIG 7 ;
         UNPAIR ;
         SWAP ;
         PUSH string "FA2_DONT_SEND_TEZ" ;
         PUSH mutez 0 ;
         AMOUNT ;
         COMPARE ;
         EQ ;
         IF { DROP } { FAILWITH } ;
         SWAP ;
         IF_LEFT
           { IF_LEFT
               { DIG 2 ;
                 DROP ;
                 IF_LEFT
                   { IF_LEFT
                       { DIG 2 ;
                         DIG 7 ;
                         DROP 2 ;
                         DUP 2 ;
                         GET 5 ;
                         SWAP ;
                         IF_LEFT
                           { DIG 4 ;
                             DIG 5 ;
                             DROP 2 ;
                             IF_LEFT
                               { DIG 3 ;
                                 DROP ;
                                 ITER { SWAP ;
                                        DUP 2 ;
                                        GET 4 ;
                                        DUP 2 ;
                                        DUP 4 ;
                                        GET 3 ;
                                        DIG 4 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 5 ;
                                        SWAP ;
                                        EXEC ;
                                        COMPARE ;
                                        LT ;
                                        IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} } ;
                                 DIG 2 ;
                                 DROP ;
                                 NIL operation }
                               { DUP 2 ;
                                 NIL (pair (pair address nat) nat) ;
                                 DUP 3 ;
                                 CAR ;
                                 ITER { SWAP ;
                                        DUP 5 ;
                                        DUP 3 ;
                                        CDR ;
                                        PAIR ;
                                        DUP 8 ;
                                        SWAP ;
                                        EXEC ;
                                        DROP ;
                                        DUP 5 ;
                                        DUP 3 ;
                                        CDR ;
                                        DUP 4 ;
                                        CAR ;
                                        PAIR ;
                                        PAIR ;
                                        DUP 9 ;
                                        SWAP ;
                                        EXEC ;
                                        DIG 2 ;
                                        PAIR ;
                                        CONS } ;
                                 DIG 3 ;
                                 DIG 5 ;
                                 DIG 6 ;
                                 DROP 3 ;
                                 NIL operation ;
                                 DIG 3 ;
                                 CDR ;
                                 PUSH mutez 0 ;
                                 DIG 3 ;
                                 TRANSFER_TOKENS ;
                                 CONS } }
                           { IF_LEFT
                               { DIG 4 ;
                                 DROP ;
                                 SELF_ADDRESS ;
                                 CONTRACT %internal_transfer_hook
                                   (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;
                                 IF_NONE { PUSH string "FA2_INTERNAL_TRANSFER_HOOK_UNDEFINED" ; FAILWITH } {} ;
                                 PUSH mutez 0 ;
                                 DUP 3 ;
                                 TRANSFER_TOKENS ;
                                 DUG 2 ;
                                 ITER { SWAP ;
                                        DUP 2 ;
                                        CDR ;
                                        ITER { SWAP ;
                                               DUP ;
                                               DUP 3 ;
                                               GET 3 ;
                                               PAIR ;
                                               SENDER ;
                                               DUP 5 ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               DUP 8 ;
                                               SWAP ;
                                               EXEC ;
                                               DROP ;
                                               DUP ;
                                               DUP 3 ;
                                               GET 3 ;
                                               PAIR ;
                                               DUP 7 ;
                                               SWAP ;
                                               EXEC ;
                                               DROP ;
                                               DUP ;
                                               DUP 3 ;
                                               GET 3 ;
                                               DUP 5 ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               DUP 9 ;
                                               SWAP ;
                                               EXEC ;
                                               DUP 3 ;
                                               GET 4 ;
                                               DUP 2 ;
                                               COMPARE ;
                                               LT ;
                                               IF { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } {} ;
                                               DUP 2 ;
                                               DUP ;
                                               CDR ;
                                               DUP 2 ;
                                               CAR ;
                                               CDR ;
                                               DIG 2 ;
                                               CAR ;
                                               CAR ;
                                               CDR ;
                                               DIG 4 ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               DUP 6 ;
                                               GET 4 ;
                                               DIG 5 ;
                                               SUB ;
                                               ABS ;
                                               DUP 6 ;
                                               GET 3 ;
                                               DUP 8 ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR ;
                                               DUP ;
                                               DUP 3 ;
                                               GET 3 ;
                                               DUP 4 ;
                                               CAR ;
                                               PAIR ;
                                               PAIR ;
                                               DUP 9 ;
                                               SWAP ;
                                               EXEC ;
                                               DUP 2 ;
                                               DUP ;
                                               CDR ;
                                               DUP 2 ;
                                               CAR ;
                                               CDR ;
                                               DIG 2 ;
                                               CAR ;
                                               CAR ;
                                               CDR ;
                                               DIG 4 ;
                                               CAR ;
                                               CAR ;
                                               CAR ;
                                               DUP 6 ;
                                               GET 4 ;
                                               DIG 5 ;
                                               ADD ;
                                               DUP 6 ;
                                               GET 3 ;
                                               DIG 6 ;
                                               CAR ;
                                               PAIR ;
                                               SWAP ;
                                               SOME ;
                                               SWAP ;
                                               UPDATE ;
                                               PAIR ;
                                               PAIR ;
                                               PAIR } ;
                                        SWAP ;
                                        DROP } ;
                                 DIG 3 ;
                                 DIG 4 ;
                                 DIG 5 ;
                                 DROP 3 ;
                                 NIL operation ;
                                 DIG 2 ;
                                 CONS }
                               { DIG 5 ;
                                 DIG 6 ;
                                 DROP 2 ;
                                 ITER { IF_LEFT
                                          { DUP 2 ;
                                            DUP 2 ;
                                            GET 4 ;
                                            PAIR ;
                                            DUP 5 ;
                                            SWAP ;
                                            EXEC ;
                                            DROP ;
                                            DUP ;
                                            CAR ;
                                            DUP 6 ;
                                            SWAP ;
                                            EXEC ;
                                            DROP ;
                                            DUP 2 ;
                                            DUP ;
                                            CDR ;
                                            DUP 2 ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            DIG 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            UNIT ;
                                            SOME ;
                                            DUP 6 ;
                                            GET 4 ;
                                            DUP 7 ;
                                            GET 3 ;
                                            PAIR ;
                                            DIG 6 ;
                                            CAR ;
                                            PAIR ;
                                            UPDATE ;
                                            PAIR ;
                                            DIG 2 ;
                                            CAR ;
                                            CAR }
                                          { DUP 2 ;
                                            DUP 2 ;
                                            GET 4 ;
                                            PAIR ;
                                            DUP 5 ;
                                            SWAP ;
                                            EXEC ;
                                            DROP ;
                                            DUP ;
                                            CAR ;
                                            DUP 6 ;
                                            SWAP ;
                                            EXEC ;
                                            DROP ;
                                            DUP 2 ;
                                            DUP ;
                                            CDR ;
                                            DUP 2 ;
                                            CAR ;
                                            CDR ;
                                            CDR ;
                                            DIG 4 ;
                                            CAR ;
                                            CDR ;
                                            CAR ;
                                            DUP 5 ;
                                            GET 4 ;
                                            DUP 6 ;
                                            GET 3 ;
                                            PAIR ;
                                            DIG 5 ;
                                            CAR ;
                                            PAIR ;
                                            NONE unit ;
                                            SWAP ;
                                            UPDATE ;
                                            PAIR ;
                                            DIG 2 ;
                                            CAR ;
                                            CAR } ;
                                        PAIR ;
                                        PAIR } ;
                                 DIG 2 ;
                                 DIG 3 ;
                                 DROP 2 ;
                                 NIL operation } } ;
                         PAIR ;
                         SWAP ;
                         DUP 2 ;
                         CDR ;
                         UPDATE 5 ;
                         SWAP ;
                         CAR }
                       { DIG 4 ;
                         DROP ;
                         ITER { SWAP ;
                                DUP ;
                                GET 5 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                SENDER ;
                                DUP 4 ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                DUP 6 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP ;
                                GET 5 ;
                                DUP 3 ;
                                GET 3 ;
                                PAIR ;
                                DUP 5 ;
                                SWAP ;
                                EXEC ;
                                DROP ;
                                DUP ;
                                GET 5 ;
                                DUP 3 ;
                                GET 3 ;
                                DUP 4 ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                DUP 7 ;
                                SWAP ;
                                EXEC ;
                                DUP 3 ;
                                GET 4 ;
                                SWAP ;
                                COMPARE ;
                                GE ;
                                IF {} { PUSH string "FA2_INSUFFICIENT_BALANCE" ; FAILWITH } ;
                                DUP ;
                                DUP 2 ;
                                GET 5 ;
                                DUP ;
                                CDR ;
                                DUP 2 ;
                                CAR ;
                                CDR ;
                                DIG 2 ;
                                CAR ;
                                CAR ;
                                CDR ;
                                DUP 5 ;
                                GET 5 ;
                                CAR ;
                                CAR ;
                                CAR ;
                                DUP 7 ;
                                GET 4 ;
                                DIG 6 ;
                                GET 5 ;
                                DUP 8 ;
                                GET 3 ;
                                DUP 9 ;
                                CAR ;
                                PAIR ;
                                PAIR ;
                                DUP 12 ;
                                SWAP ;
                                EXEC ;
                                SUB ;
                                ABS ;
                                DUP 7 ;
                                GET 3 ;
                                DUP 8 ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                PAIR ;
                                PAIR ;
                                PAIR ;
                                UPDATE 5 ;
                                DUP ;
                                DUP 2 ;
                                GET 5 ;
                                DUP 3 ;
                                GET 5 ;
                                CDR ;
                                CDR ;
                                DUP 5 ;
                                GET 4 ;
                                DIG 4 ;
                                GET 5 ;
                                DUP 6 ;
                                GET 3 ;
                                PAIR ;
                                DUP 11 ;
                                SWAP ;
                                EXEC ;
                                SUB ;
                                ABS ;
                                DIG 4 ;
                                GET 3 ;
                                SWAP ;
                                SOME ;
                                SWAP ;
                                UPDATE ;
                                DUP 2 ;
                                CDR ;
                                CAR ;
                                PAIR ;
                                SWAP ;
                                CAR ;
                                PAIR ;
                                UPDATE 5 } ;
                         DIG 2 ;
                         DIG 3 ;
                         DIG 4 ;
                         DIG 5 ;
                         DROP 4 ;
                         SWAP } }
                   { DIG 3 ;
                     DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DIG 7 ;
                     DROP 5 ;
                     IF_LEFT
                       { DROP ;
                         PUSH string "FA2_NO_PENDING_OWNER" ;
                         DUP 2 ;
                         GET 3 ;
                         CDR ;
                         CAR ;
                         CAR ;
                         IF_NONE { FAILWITH } { SWAP ; DROP } ;
                         PUSH string "FA2_INVALID_PENDING_OWNER_ACCESS" ;
                         DUP 2 ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DROP } { FAILWITH } ;
                         DUP 2 ;
                         DIG 2 ;
                         GET 3 ;
                         DUP ;
                         CDR ;
                         DIG 3 ;
                         DUP 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         PAIR ;
                         DIG 2 ;
                         CAR ;
                         CAR ;
                         PAIR ;
                         PAIR ;
                         UPDATE 3 ;
                         DUP ;
                         GET 3 ;
                         DUP ;
                         CDR ;
                         CDR ;
                         DUP 2 ;
                         CDR ;
                         CAR ;
                         CDR ;
                         NONE address ;
                         PAIR ;
                         PAIR ;
                         SWAP ;
                         CAR ;
                         PAIR ;
                         UPDATE 3 }
                       { PUSH string "FA2_INVALID_CREATOR_ACCESS" ;
                         DUP 3 ;
                         SENDER ;
                         SWAP ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         CAR ;
                         SWAP ;
                         MEM ;
                         IF { DROP } { FAILWITH } ;
                         IF_LEFT
                           { SWAP ;
                             PUSH string "FA2_DUP_TOKEN_ID" ;
                             PUSH bool False ;
                             DUP 3 ;
                             GET 5 ;
                             CDR ;
                             CAR ;
                             DUP 5 ;
                             CAR ;
                             CAR ;
                             MEM ;
                             COMPARE ;
                             EQ ;
                             IF { DROP } { FAILWITH } ;
                             DUP ;
                             DUP 2 ;
                             GET 5 ;
                             DUP ;
                             CDR ;
                             CDR ;
                             DIG 3 ;
                             GET 5 ;
                             CDR ;
                             CAR ;
                             DUP 5 ;
                             CAR ;
                             DUP 6 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             UPDATE 5 ;
                             DUP ;
                             DUP 2 ;
                             GET 5 ;
                             DUP ;
                             CDR ;
                             DIG 3 ;
                             GET 5 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DUP 5 ;
                             CDR ;
                             DUP 6 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DUP 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             UPDATE 5 ;
                             DUP ;
                             DUP 2 ;
                             GET 5 ;
                             DIG 2 ;
                             GET 5 ;
                             CDR ;
                             CDR ;
                             PUSH nat 0 ;
                             DUP 5 ;
                             CAR ;
                             CAR ;
                             SWAP ;
                             SOME ;
                             SWAP ;
                             UPDATE ;
                             DUP 2 ;
                             CDR ;
                             CAR ;
                             PAIR ;
                             SWAP ;
                             CAR ;
                             PAIR ;
                             UPDATE 5 ;
                             DUP ;
                             DUP 2 ;
                             GET 5 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             PUSH nat 1 ;
                             DIG 6 ;
                             CAR ;
                             CAR ;
                             ADD ;
                             DIG 5 ;
                             GET 5 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DUP 2 ;
                             DUP 2 ;
                             COMPARE ;
                             GT ;
                             IF { SWAP ; DROP } { DROP } ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             UPDATE 5 }
                           { DROP ;
                             DUP ;
                             DUP 2 ;
                             GET 3 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             GET 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             SENDER ;
                             PUSH bool False ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             UPDATE 3 } } ;
                     SWAP } }
               { DIG 5 ;
                 DIG 6 ;
                 DROP 2 ;
                 IF_LEFT
                   { DIG 4 ;
                     DIG 5 ;
                     DIG 6 ;
                     DROP 3 ;
                     IF_LEFT
                       { DIG 3 ;
                         DROP ;
                         PUSH string "FA2_INVALID_INTERNAL_TRANSFER_HOOK_ACCESS" ;
                         SELF_ADDRESS ;
                         SENDER ;
                         COMPARE ;
                         EQ ;
                         IF { DROP } { FAILWITH } ;
                         NIL operation ;
                         DUP 3 ;
                         GET 3 ;
                         CDR ;
                         CDR ;
                         ITER { DUP 5 ; SWAP ; EXEC ; PUSH mutez 0 ; DUP 4 ; TRANSFER_TOKENS ; CONS } ;
                         SWAP ;
                         DIG 3 ;
                         DROP 2 ;
                         SWAP }
                       { DIG 2 ;
                         DROP ;
                         PUSH string "FA2_INVALID_METADATA_MANAGER_ACCESS" ;
                         DUP 3 ;
                         SENDER ;
                         SWAP ;
                         GET 3 ;
                         CAR ;
                         CAR ;
                         CDR ;
                         SWAP ;
                         MEM ;
                         IF { DROP } { FAILWITH } ;
                         IF_LEFT
                           { DROP ;
                             DUP ;
                             DUP 2 ;
                             GET 3 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             DIG 4 ;
                             GET 3 ;
                             CAR ;
                             CAR ;
                             CDR ;
                             SENDER ;
                             PUSH bool False ;
                             SWAP ;
                             UPDATE ;
                             DIG 3 ;
                             CAR ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             PAIR ;
                             UPDATE 3 }
                           { ITER { UNPAIR ;
                                    DUP 3 ;
                                    DUP 4 ;
                                    GET 5 ;
                                    DUP ;
                                    CDR ;
                                    CDR ;
                                    DIG 5 ;
                                    GET 5 ;
                                    CDR ;
                                    CAR ;
                                    DIG 5 ;
                                    DIG 5 ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE 5 } } } }
                   { IF_LEFT
                       { DIG 2 ;
                         DROP ;
                         PUSH string "FA2_INVALID_MINTER_ACCESS" ;
                         DUP 3 ;
                         SENDER ;
                         SWAP ;
                         GET 3 ;
                         CAR ;
                         CDR ;
                         CAR ;
                         SWAP ;
                         MEM ;
                         IF { DROP } { FAILWITH } ;
                         IF_LEFT
                           { ITER { SWAP ;
                                    DUP ;
                                    GET 5 ;
                                    DUP 3 ;
                                    GET 3 ;
                                    PAIR ;
                                    DUP 5 ;
                                    SWAP ;
                                    EXEC ;
                                    DROP ;
                                    DUP ;
                                    DUP 2 ;
                                    GET 5 ;
                                    DUP ;
                                    CDR ;
                                    DUP 2 ;
                                    CAR ;
                                    CDR ;
                                    DIG 2 ;
                                    CAR ;
                                    CAR ;
                                    CDR ;
                                    DUP 5 ;
                                    GET 5 ;
                                    CAR ;
                                    CAR ;
                                    CAR ;
                                    DUP 7 ;
                                    GET 4 ;
                                    DIG 6 ;
                                    GET 5 ;
                                    DUP 8 ;
                                    GET 3 ;
                                    DUP 9 ;
                                    CAR ;
                                    PAIR ;
                                    PAIR ;
                                    DUP 11 ;
                                    SWAP ;
                                    EXEC ;
                                    ADD ;
                                    DUP 7 ;
                                    GET 3 ;
                                    DUP 8 ;
                                    CAR ;
                                    PAIR ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    PAIR ;
                                    PAIR ;
                                    PAIR ;
                                    UPDATE 5 ;
                                    DUP ;
                                    DUP 2 ;
                                    GET 5 ;
                                    DUP 3 ;
                                    GET 5 ;
                                    CDR ;
                                    CDR ;
                                    DUP 5 ;
                                    GET 4 ;
                                    DIG 4 ;
                                    GET 5 ;
                                    DUP 6 ;
                                    GET 3 ;
                                    PAIR ;
                                    DUP 10 ;
                                    SWAP ;
                                    EXEC ;
                                    ADD ;
                                    DIG 4 ;
                                    GET 3 ;
                                    SWAP ;
                                    SOME ;
                                    SWAP ;
                                    UPDATE ;
                                    DUP 2 ;
                                    CDR ;
                                    CAR ;
                                    PAIR ;
                                    SWAP ;
                                    CAR ;
                                    PAIR ;
                                    UPDATE 5 } ;
                             DIG 2 ;
                             DIG 3 ;
                             DIG 4 ;
                             DROP 3 }
                           { DIG 3 ;
                             DIG 4 ;
                             DIG 5 ;
                             DROP 4 ;
                             DUP ;
                             DUP 2 ;
                             GET 3 ;
                             DUP ;
                             CDR ;
                             DUP 2 ;
                             CAR ;
                             CDR ;
                             CDR ;
                             DIG 4 ;
                             GET 3 ;
                             CAR ;
                             CDR ;
                             CAR ;
                             SENDER ;
                             PUSH bool False ;
                             SWAP ;
                             UPDATE ;
                             PAIR ;
                             DIG 2 ;
                             CAR ;
                             CAR ;
                             PAIR ;
                             PAIR ;
                             UPDATE 3 } }
                       { DIG 4 ;
                         DIG 5 ;
                         DIG 6 ;
                         DROP 3 ;
                         PUSH string "FA2_INVALID_OWNER_ACCESS" ;
                         DUP 3 ;
                         SENDER ;
                         SWAP ;
                         GET 3 ;
                         CAR ;
                         CDR ;
                         CDR ;
                         SWAP ;
                         COMPARE ;
                         EQ ;
                         IF { DROP } { FAILWITH } ;
                         IF_LEFT
                           { IF_LEFT
                               { DIG 2 ;
                                 DROP ;
                                 IF_LEFT
                                   { IF_LEFT
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         DIG 2 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         DIG 5 ;
                                         PUSH bool True ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 }
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 5 ;
                                         PUSH bool True ;
                                         SWAP ;
                                         UPDATE ;
                                         DIG 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 } }
                                   { IF_LEFT
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         DIG 5 ;
                                         PUSH bool True ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         DIG 2 ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 }
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         CDR ;
                                         DIG 3 ;
                                         GET 3 ;
                                         CDR ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         PUSH bool True ;
                                         SWAP ;
                                         UPDATE ;
                                         DUP 3 ;
                                         CDR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         SWAP ;
                                         CAR ;
                                         PAIR ;
                                         UPDATE 3 } } }
                               { IF_LEFT
                                   { IF_LEFT
                                       { SWAP ;
                                         DUP 2 ;
                                         DIG 3 ;
                                         SWAP ;
                                         EXEC ;
                                         DROP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DIG 2 ;
                                         GET 3 ;
                                         CDR ;
                                         CDR ;
                                         DIG 3 ;
                                         PUSH bool True ;
                                         SWAP ;
                                         UPDATE ;
                                         DUP 2 ;
                                         CDR ;
                                         CAR ;
                                         PAIR ;
                                         SWAP ;
                                         CAR ;
                                         PAIR ;
                                         UPDATE 3 }
                                       { DIG 2 ;
                                         DROP ;
                                         SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         DIG 2 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         DIG 5 ;
                                         PUSH bool False ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 } }
                                   { DIG 2 ;
                                     DROP ;
                                     IF_LEFT
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CAR ;
                                         CDR ;
                                         DIG 5 ;
                                         PUSH bool False ;
                                         SWAP ;
                                         UPDATE ;
                                         DIG 3 ;
                                         CAR ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 }
                                       { SWAP ;
                                         DUP ;
                                         DUP 2 ;
                                         GET 3 ;
                                         DUP ;
                                         CDR ;
                                         DUP 2 ;
                                         CAR ;
                                         CDR ;
                                         CDR ;
                                         DIG 4 ;
                                         GET 3 ;
                                         CAR ;
                                         CDR ;
                                         CAR ;
                                         DIG 5 ;
                                         PUSH bool False ;
                                         SWAP ;
                                         UPDATE ;
                                         PAIR ;
                                         DIG 2 ;
                                         CAR ;
                                         CAR ;
                                         PAIR ;
                                         PAIR ;
                                         UPDATE 3 } } } }
                           { DIG 2 ;
                             DROP ;
                             IF_LEFT
                               { IF_LEFT
                                   { SWAP ;
                                     DUP ;
                                     DUP 2 ;
                                     GET 3 ;
                                     DUP ;
                                     CDR ;
                                     CDR ;
                                     DIG 3 ;
                                     GET 3 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     DIG 4 ;
                                     PUSH bool False ;
                                     SWAP ;
                                     UPDATE ;
                                     DUP 3 ;
                                     CDR ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE 3 }
                                   { SWAP ;
                                     DUP ;
                                     DUP 2 ;
                                     GET 3 ;
                                     DIG 2 ;
                                     GET 3 ;
                                     CDR ;
                                     CDR ;
                                     DIG 3 ;
                                     PUSH bool False ;
                                     SWAP ;
                                     UPDATE ;
                                     DUP 2 ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     SWAP ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE 3 } }
                               { IF_LEFT
                                   { DROP ;
                                     DUP ;
                                     GET 3 ;
                                     DUP ;
                                     CDR ;
                                     PUSH address "tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU" ;
                                     DUP 3 ;
                                     CAR ;
                                     CDR ;
                                     CAR ;
                                     PAIR ;
                                     DIG 2 ;
                                     CAR ;
                                     CAR ;
                                     PAIR ;
                                     PAIR ;
                                     UPDATE 3 }
                                   { SWAP ;
                                     DUP ;
                                     GET 3 ;
                                     DUP ;
                                     CDR ;
                                     CDR ;
                                     DUP 2 ;
                                     CDR ;
                                     CAR ;
                                     CDR ;
                                     DIG 4 ;
                                     SOME ;
                                     PAIR ;
                                     PAIR ;
                                     SWAP ;
                                     CAR ;
                                     PAIR ;
                                     UPDATE 3 } } } } } ;
                 SWAP } }
           { DIG 2 ;
             DIG 4 ;
             DIG 5 ;
             DIG 6 ;
             DIG 7 ;
             DIG 8 ;
             DROP 6 ;
             PUSH string "FA2_INVALID_ROYALTIES_MANAGER_ACCESS" ;
             DUP 3 ;
             SENDER ;
             SWAP ;
             GET 3 ;
             CDR ;
             CAR ;
             CDR ;
             SWAP ;
             MEM ;
             IF { DROP } { FAILWITH } ;
             IF_LEFT
               { IF_LEFT
                   { DROP ;
                     DUP ;
                     DUP 2 ;
                     GET 3 ;
                     DUP ;
                     CDR ;
                     CDR ;
                     DIG 3 ;
                     GET 3 ;
                     CDR ;
                     CAR ;
                     CDR ;
                     SENDER ;
                     PUSH bool False ;
                     SWAP ;
                     UPDATE ;
                     DUP 3 ;
                     CDR ;
                     CAR ;
                     CAR ;
                     PAIR ;
                     PAIR ;
                     SWAP ;
                     CAR ;
                     PAIR ;
                     UPDATE 3 }
                   { UPDATE 6 } }
               { ITER { UNPAIR ;
                        DUP 3 ;
                        DUP 4 ;
                        GET 5 ;
                        DUP ;
                        CDR ;
                        DIG 5 ;
                        GET 5 ;
                        CAR ;
                        CDR ;
                        CDR ;
                        DIG 5 ;
                        DIG 5 ;
                        SWAP ;
                        SOME ;
                        SWAP ;
                        UPDATE ;
                        DUP 3 ;
                        CAR ;
                        CDR ;
                        CAR ;
                        PAIR ;
                        DIG 2 ;
                        CAR ;
                        CAR ;
                        PAIR ;
                        PAIR ;
                        UPDATE 5 } } ;
             SWAP } ;
         PAIR } ;
  view "get_owner" unit address { CDR ; GET 3 ; CAR ; CDR ; CDR } ;
  view "is_owner"
       address
       bool
       { UNPAIR ; SWAP ; GET 3 ; CAR ; CDR ; CDR ; SWAP ; COMPARE ; EQ } ;
  view "is_creator"
       address
       bool
       { UNPAIR ; SWAP ; GET 3 ; CAR ; CAR ; CAR ; SWAP ; MEM } ;
  view "is_minter"
       address
       bool
       { UNPAIR ; SWAP ; GET 3 ; CAR ; CDR ; CAR ; SWAP ; MEM } ;
  view "is_metadata_manager"
       address
       bool
       { UNPAIR ; SWAP ; GET 3 ; CAR ; CAR ; CDR ; SWAP ; MEM } ;
  view "is_royalties_manager"
       address
       bool
       { UNPAIR ; SWAP ; GET 3 ; CDR ; CAR ; CDR ; SWAP ; MEM } ;
  view "next_token_id" unit nat { CDR ; GET 5 ; CAR ; CAR ; CDR } ;
  view "get_balance"
       (pair (address %owner) (nat %token_id))
       nat
       { UNPAIR ;
         SWAP ;
         GET 5 ;
         CAR ;
         CAR ;
         CAR ;
         DUP 2 ;
         CDR ;
         DIG 2 ;
         CAR ;
         PAIR ;
         GET ;
         IF_NONE { PUSH nat 0 } {} } ;
  view "total_supply"
       nat
       nat
       { UNPAIR ;
         SWAP ;
         GET 5 ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { PUSH nat 0 } {} } ;
  view "is_operator"
       (pair (address %owner) (address %operator) (nat %token_id))
       bool
       { UNPAIR ;
         DUP ;
         GET 3 ;
         DUP 2 ;
         CAR ;
         DIG 3 ;
         GET 5 ;
         CAR ;
         CDR ;
         CAR ;
         DIG 3 ;
         GET 4 ;
         DUP 4 ;
         PAIR ;
         DUP 3 ;
         PAIR ;
         MEM ;
         DUG 2 ;
         COMPARE ;
         EQ ;
         OR } ;
  view "get_royalties"
       nat
       (pair (nat %total_shares) (map %shares address nat))
       { UNPAIR ;
         DUP 2 ;
         GET 5 ;
         CAR ;
         CDR ;
         CDR ;
         SWAP ;
         GET ;
         IF_NONE { GET 6 } { SWAP ; DROP } } }

