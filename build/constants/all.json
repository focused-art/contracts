[
  "{ PUSH (pair (lambda\n                (pair nat\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda address unit)\n             (lambda\n                (pair (pair address nat)\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                nat))\n       (Pair { UNPAIR ;\n               SWAP ;\n               GET 7 ;\n               SWAP ;\n               COMPARE ;\n               LT ;\n               IF { UNIT } { PUSH string \"FA2_TOKEN_UNDEFINED\" ; FAILWITH } }\n             { PUSH string \"FA2_NOT_OWNER\" ;\n               SWAP ;\n               SENDER ;\n               COMPARE ;\n               EQ ;\n               IF { DROP ; UNIT } { FAILWITH } }\n             { UNPAIR ;\n               UNPAIR ;\n               DIG 2 ;\n               GET 11 ;\n               DUG 2 ;\n               PAIR ;\n               GET ;\n               IF_NONE { PUSH nat 0 } {} }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR 3 ;\n    DIG 3 ;\n    UNPAIR ;\n    IF_LEFT\n      { DIG 3 ;\n        DROP ;\n        IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            ITER { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ;\n                   DUP 2 ;\n                   GET 4 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   GET 3 ;\n                   DIG 4 ;\n                   CAR ;\n                   PAIR ;\n                   PAIR ;\n                   DUP 5 ;\n                   SWAP ;\n                   EXEC ;\n                   COMPARE ;\n                   GE ;\n                   IF { DROP } { FAILWITH } } ;\n            SWAP ;\n            DROP ;\n            NIL operation }\n          { NIL (pair (pair address nat) nat) ;\n            DUP 2 ;\n            CAR ;\n            ITER { DUP 4 ;\n                   DUP 2 ;\n                   CDR ;\n                   PAIR ;\n                   DUP 6 ;\n                   SWAP ;\n                   EXEC ;\n                   DROP ;\n                   DUP 4 ;\n                   DUP 2 ;\n                   CDR ;\n                   DUP 3 ;\n                   CAR ;\n                   PAIR ;\n                   PAIR ;\n                   DUP 7 ;\n                   SWAP ;\n                   EXEC ;\n                   SWAP ;\n                   PAIR ;\n                   CONS } ;\n            DIG 3 ;\n            DIG 4 ;\n            DROP 2 ;\n            DIG 2 ;\n            NIL operation ;\n            DIG 3 ;\n            CDR ;\n            PUSH mutez 0 ;\n            DIG 4 ;\n            TRANSFER_TOKENS ;\n            CONS } }\n      { IF_LEFT\n          { DIG 3 ;\n            DROP ;\n            DUP 2 ;\n            EMPTY_MAP (pair address nat) nat ;\n            NIL operation ;\n            DUP 4 ;\n            ITER { DUP ;\n                   CDR ;\n                   ITER { DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          PAIR ;\n                          SENDER ;\n                          DUP 4 ;\n                          CAR ;\n                          DIG 2 ;\n                          UNPAIR ;\n                          PUSH bool True ;\n                          DIG 2 ;\n                          GET 13 ;\n                          DIG 2 ;\n                          DUP 5 ;\n                          PAIR ;\n                          DUP 4 ;\n                          PAIR ;\n                          MEM ;\n                          DIG 3 ;\n                          DIG 3 ;\n                          COMPARE ;\n                          EQ ;\n                          OR ;\n                          COMPARE ;\n                          EQ ;\n                          IF {} { PUSH string \"FA2_NOT_OPERATOR\" ; FAILWITH } ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          PAIR ;\n                          DUP 9 ;\n                          SWAP ;\n                          EXEC ;\n                          DROP ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          DUP 4 ;\n                          CAR ;\n                          PAIR ;\n                          PAIR ;\n                          DUP 10 ;\n                          SWAP ;\n                          EXEC ;\n                          DUP 2 ;\n                          GET 4 ;\n                          DUP 2 ;\n                          COMPARE ;\n                          LT ;\n                          IF { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } {} ;\n                          PUSH bool False ;\n                          DUP 6 ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 6 ;\n                          CAR ;\n                          PAIR ;\n                          MEM ;\n                          COMPARE ;\n                          EQ ;\n                          IF { DIG 4 ;\n                               DUP 2 ;\n                               DUP 4 ;\n                               GET 3 ;\n                               DUP 6 ;\n                               CAR ;\n                               PAIR ;\n                               SWAP ;\n                               SOME ;\n                               SWAP ;\n                               UPDATE ;\n                               DUG 4 }\n                             {} ;\n                          DUP 6 ;\n                          DIG 6 ;\n                          GET 11 ;\n                          DUP 4 ;\n                          GET 4 ;\n                          DIG 3 ;\n                          SUB ;\n                          ABS ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 6 ;\n                          CAR ;\n                          PAIR ;\n                          SWAP ;\n                          SOME ;\n                          SWAP ;\n                          UPDATE ;\n                          UPDATE 11 ;\n                          DUG 4 ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          DUP 3 ;\n                          CAR ;\n                          PAIR ;\n                          PAIR ;\n                          DUP 10 ;\n                          SWAP ;\n                          EXEC ;\n                          PUSH bool False ;\n                          DUP 6 ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR ;\n                          MEM ;\n                          COMPARE ;\n                          EQ ;\n                          IF { DIG 4 ;\n                               DUP 2 ;\n                               DUP 4 ;\n                               GET 3 ;\n                               DUP 5 ;\n                               CAR ;\n                               PAIR ;\n                               SWAP ;\n                               SOME ;\n                               SWAP ;\n                               UPDATE ;\n                               DUG 4 }\n                             {} ;\n                          DUP 6 ;\n                          DIG 6 ;\n                          GET 11 ;\n                          DUP 4 ;\n                          GET 4 ;\n                          DIG 3 ;\n                          ADD ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR ;\n                          SWAP ;\n                          SOME ;\n                          SWAP ;\n                          UPDATE ;\n                          UPDATE 11 ;\n                          DUG 4 ;\n                          DIG 2 ;\n                          DUP 2 ;\n                          GET 4 ;\n                          DUP 3 ;\n                          GET 3 ;\n                          DIG 3 ;\n                          CAR ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR 4 ;\n                          EMIT %transfer_event\n                            (pair (address %from_) (address %to_) (nat %token_id) (nat %amount)) ;\n                          CONS ;\n                          SWAP } ;\n                   DROP } ;\n            DIG 5 ;\n            DROP ;\n            SWAP ;\n            ITER { UNPAIR ;\n                   DUP 4 ;\n                   DUP 2 ;\n                   PAIR ;\n                   DUP 8 ;\n                   SWAP ;\n                   EXEC ;\n                   DIG 2 ;\n                   DUP 2 ;\n                   SUB ;\n                   SWAP ;\n                   DUP 3 ;\n                   CDR ;\n                   DIG 3 ;\n                   CAR ;\n                   PAIR 4 ;\n                   EMIT %balance_update\n                     (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) ;\n                   CONS } ;\n            DIG 4 ;\n            DROP ;\n            PAIR ;\n            DIG 2 ;\n            GET 5 ;\n            CAR ;\n            ITER { DUP 2 ;\n                   CDR ;\n                   DIG 2 ;\n                   CAR ;\n                   DIG 2 ;\n                   CONTRACT %transfer_hook\n                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;\n                   IF_NONE { PUSH string \"FA_TRANSFER_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS ;\n                   PAIR } ;\n            SWAP ;\n            DROP ;\n            UNPAIR }\n          { DIG 4 ;\n            DROP ;\n            SWAP ;\n            NIL operation ;\n            DIG 2 ;\n            ITER { IF_LEFT\n                     { DUP 3 ;\n                       DUP 2 ;\n                       GET 4 ;\n                       PAIR ;\n                       DUP 5 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP ;\n                       CAR ;\n                       DUP 6 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP 3 ;\n                       DIG 3 ;\n                       GET 13 ;\n                       UNIT ;\n                       SOME ;\n                       DUP 4 ;\n                       GET 4 ;\n                       DUP 5 ;\n                       GET 3 ;\n                       PAIR ;\n                       DUP 5 ;\n                       CAR ;\n                       PAIR ;\n                       UPDATE ;\n                       UPDATE 13 ;\n                       DUG 2 ;\n                       SWAP ;\n                       PUSH bool True ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       DIG 4 ;\n                       CAR ;\n                       PAIR 4 ;\n                       EMIT %operator_update\n                         (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) }\n                     { DUP 3 ;\n                       DUP 2 ;\n                       GET 4 ;\n                       PAIR ;\n                       DUP 5 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP ;\n                       CAR ;\n                       DUP 6 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP 3 ;\n                       DIG 3 ;\n                       GET 13 ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       PAIR ;\n                       DUP 4 ;\n                       CAR ;\n                       PAIR ;\n                       NONE unit ;\n                       SWAP ;\n                       UPDATE ;\n                       UPDATE 13 ;\n                       DUG 2 ;\n                       SWAP ;\n                       PUSH bool False ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       DIG 4 ;\n                       CAR ;\n                       PAIR 4 ;\n                       EMIT %operator_update\n                         (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) } ;\n                   CONS } ;\n            DIG 2 ;\n            DIG 3 ;\n            DROP 2 } } ;\n    PAIR } }",
  "{ PUSH (pair (lambda\n                (pair nat\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda\n                (pair (pair address nat)\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                nat)\n             (lambda\n                (pair nat\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                nat))\n       (Pair { UNPAIR ;\n               SWAP ;\n               GET 7 ;\n               SWAP ;\n               COMPARE ;\n               LT ;\n               IF { UNIT } { PUSH string \"FA2_TOKEN_UNDEFINED\" ; FAILWITH } }\n             { UNPAIR ;\n               UNPAIR ;\n               DIG 2 ;\n               GET 11 ;\n               DUG 2 ;\n               PAIR ;\n               GET ;\n               IF_NONE { PUSH nat 0 } {} }\n             { UNPAIR ; SWAP ; GET 9 ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR 3 ;\n    DIG 3 ;\n    UNPAIR ;\n    IF_LEFT\n      { IF_LEFT\n          { SWAP ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            PAIR ;\n            SENDER ;\n            DUP 4 ;\n            CAR ;\n            DIG 2 ;\n            UNPAIR ;\n            PUSH bool True ;\n            DIG 2 ;\n            GET 13 ;\n            DIG 2 ;\n            DUP 5 ;\n            PAIR ;\n            DUP 4 ;\n            PAIR ;\n            MEM ;\n            DIG 3 ;\n            DIG 3 ;\n            COMPARE ;\n            EQ ;\n            OR ;\n            COMPARE ;\n            EQ ;\n            IF {} { PUSH string \"FA2_NOT_OPERATOR\" ; FAILWITH } ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            PAIR ;\n            DIG 3 ;\n            SWAP ;\n            EXEC ;\n            DROP ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            DUP 4 ;\n            CAR ;\n            PAIR ;\n            PAIR ;\n            DIG 3 ;\n            SWAP ;\n            EXEC ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 2 ;\n            COMPARE ;\n            GE ;\n            IF {} { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } ;\n            DUP 3 ;\n            GET 4 ;\n            SWAP ;\n            SUB ;\n            ABS ;\n            DUP 2 ;\n            DIG 2 ;\n            GET 11 ;\n            DUP 3 ;\n            DUP 5 ;\n            GET 3 ;\n            DUP 6 ;\n            CAR ;\n            PAIR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 11 ;\n            SWAP ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 3 ;\n            DUP 5 ;\n            GET 3 ;\n            PAIR ;\n            DIG 5 ;\n            SWAP ;\n            EXEC ;\n            SUB ;\n            ABS ;\n            DUP 3 ;\n            DIG 3 ;\n            GET 9 ;\n            DUP 3 ;\n            DUP 6 ;\n            GET 3 ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 9 ;\n            DUG 2 ;\n            NIL operation ;\n            DUP 4 ;\n            GET 5 ;\n            GET 7 ;\n            ITER { CONTRACT %burn_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                   IF_NONE { PUSH string \"FA_BURN_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 7 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            PUSH int -1 ;\n            DUP 6 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DIG 2 ;\n            DUP 6 ;\n            GET 3 ;\n            NIL (pair address int) ;\n            PUSH int -1 ;\n            DUP 9 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DUP 9 ;\n            CAR ;\n            PAIR ;\n            CONS ;\n            PAIR 4 ;\n            EMIT %total_supply_update\n              (pair (list %owner_diffs (pair (address %owner) (int %owner_diff)))\n                    (nat %token_id)\n                    (nat %new_total_supply)\n                    (int %diff)) ;\n            CONS ;\n            PUSH int -1 ;\n            DUP 5 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DIG 2 ;\n            DUP 5 ;\n            GET 3 ;\n            DIG 5 ;\n            CAR ;\n            PAIR 4 ;\n            EMIT %balance_update\n              (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) }\n          { DIG 2 ;\n            DIG 3 ;\n            DIG 4 ;\n            DROP 3 ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_CREATOR_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            SWAP ;\n            GET 3 ;\n            GET 5 ;\n            SWAP ;\n            MEM ;\n            IF { DROP } { FAILWITH } ;\n            PUSH string \"FA2_DUP_TOKEN_ID\" ;\n            PUSH bool False ;\n            DUP 3 ;\n            GET 15 ;\n            DUP 5 ;\n            CAR ;\n            CAR ;\n            MEM ;\n            COMPARE ;\n            EQ ;\n            IF { DROP } { FAILWITH } ;\n            DUP ;\n            GET 15 ;\n            DUP 3 ;\n            CAR ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 15 ;\n            DUP ;\n            GET 17 ;\n            DUP 3 ;\n            GET 3 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 17 ;\n            DUP ;\n            GET 9 ;\n            PUSH nat 0 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 9 ;\n            DUP ;\n            PUSH nat 1 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            ADD ;\n            DIG 2 ;\n            GET 7 ;\n            DUP 2 ;\n            DUP 2 ;\n            COMPARE ;\n            GT ;\n            IF { SWAP ; DROP } { DROP } ;\n            UPDATE 7 ;\n            DUP ;\n            GET 19 ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 19 ;\n            NIL operation ;\n            DUP 2 ;\n            GET 5 ;\n            GET 3 ;\n            ITER { CONTRACT %create_hook\n                     (pair (pair %token_metadata (nat %token_id) (map %token_info string bytes))\n                           (pair %royalties (nat %total_shares) (map %shares address nat))\n                           (nat %max_supply)) ;\n                   IF_NONE { PUSH string \"FA_CREATE_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            DUP 3 ;\n            CAR ;\n            CDR ;\n            SOME ;\n            DIG 3 ;\n            CAR ;\n            CAR ;\n            PAIR ;\n            EMIT %token_metadata_update\n              (pair (nat %token_id) (option %new_metadata (map string bytes))) } }\n      { SWAP ;\n        PUSH string \"FA2_INVALID_MINTER_ACCESS\" ;\n        DUP 2 ;\n        SENDER ;\n        SWAP ;\n        GET 3 ;\n        GET 7 ;\n        SWAP ;\n        MEM ;\n        IF { DROP } { FAILWITH } ;\n        DUP ;\n        DUP 3 ;\n        GET 3 ;\n        PAIR ;\n        DIG 3 ;\n        SWAP ;\n        EXEC ;\n        DROP ;\n        DUP 2 ;\n        GET 4 ;\n        DUP 2 ;\n        DUP 4 ;\n        GET 3 ;\n        DUP 5 ;\n        CAR ;\n        PAIR ;\n        PAIR ;\n        DIG 4 ;\n        SWAP ;\n        EXEC ;\n        ADD ;\n        DUP 2 ;\n        DIG 2 ;\n        GET 11 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        DUP 6 ;\n        CAR ;\n        PAIR ;\n        SWAP ;\n        SOME ;\n        SWAP ;\n        UPDATE ;\n        UPDATE 11 ;\n        SWAP ;\n        DUP 3 ;\n        GET 4 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        PAIR ;\n        DIG 5 ;\n        SWAP ;\n        EXEC ;\n        ADD ;\n        DUP 3 ;\n        DIG 3 ;\n        GET 9 ;\n        DUP 3 ;\n        DUP 6 ;\n        GET 3 ;\n        SWAP ;\n        SOME ;\n        SWAP ;\n        UPDATE ;\n        UPDATE 9 ;\n        DUG 2 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        SWAP ;\n        GET 19 ;\n        SWAP ;\n        GET ;\n        IF_NONE { PUSH nat 0 } {} ;\n        DUP 2 ;\n        COMPARE ;\n        LE ;\n        IF {} { PUSH string \"FA2_MAX_SUPPLY_EXCEEDED\" ; FAILWITH } ;\n        NIL operation ;\n        DUP 4 ;\n        GET 5 ;\n        GET 5 ;\n        ITER { CONTRACT %mint_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n               IF_NONE { PUSH string \"FA_MINT_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n               PUSH mutez 0 ;\n               DUP 7 ;\n               TRANSFER_TOKENS ;\n               CONS } ;\n        DUP 5 ;\n        GET 4 ;\n        INT ;\n        DIG 2 ;\n        DUP 6 ;\n        GET 3 ;\n        NIL (pair address int) ;\n        DUP 8 ;\n        GET 4 ;\n        INT ;\n        DUP 9 ;\n        CAR ;\n        PAIR ;\n        CONS ;\n        PAIR 4 ;\n        EMIT %total_supply_update\n          (pair (list %owner_diffs (pair (address %owner) (int %owner_diff)))\n                (nat %token_id)\n                (nat %new_total_supply)\n                (int %diff)) ;\n        CONS ;\n        DUP 4 ;\n        GET 4 ;\n        INT ;\n        DIG 2 ;\n        DUP 5 ;\n        GET 3 ;\n        DIG 5 ;\n        CAR ;\n        PAIR 4 ;\n        EMIT %balance_update\n          (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) } ;\n    CONS ;\n    PAIR } }",
  "{ UNPAIR ;\n  PUSH string \"FA2_INVALID_OWNER_ACCESS\" ;\n  DUP 3 ;\n  SENDER ;\n  SWAP ;\n  GET 3 ;\n  CAR ;\n  SWAP ;\n  COMPARE ;\n  EQ ;\n  IF { DROP } { FAILWITH } ;\n  IF_LEFT\n    { IF_LEFT\n        { SWAP ; DUP ; GET 3 ; DIG 2 ; SOME ; UPDATE 3 ; UPDATE 3 }\n        { SWAP ;\n          EMPTY_BIG_MAP string bytes ;\n          UPDATE 1 ;\n          SWAP ;\n          ITER { UNPAIR ;\n                 DUP 3 ;\n                 DIG 3 ;\n                 CAR ;\n                 DIG 3 ;\n                 DIG 3 ;\n                 SWAP ;\n                 SOME ;\n                 SWAP ;\n                 UPDATE ;\n                 UPDATE 1 } } }\n    { IF_LEFT\n        { ITER { IF_LEFT\n                   { DUP ;\n                     CAR ;\n                     IF_LEFT\n                       { IF_LEFT\n                           { IF_LEFT\n                               { DROP ;\n                                 DUP ;\n                                 CDR ;\n                                 CONTRACT %burn_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                                 IF_NONE { PUSH string \"FA_BURN_HOOK_UNDEFINED\" ; FAILWITH } { DROP } ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 7 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool True ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 7 ;\n                                 UPDATE 5 }\n                               { DROP ;\n                                 DUP ;\n                                 CDR ;\n                                 CONTRACT %create_hook\n                                   (pair (pair %token_metadata (nat %token_id) (map %token_info string bytes))\n                                         (pair %royalties (nat %total_shares) (map %shares address nat))\n                                         (nat %max_supply)) ;\n                                 IF_NONE { PUSH string \"FA_CREATE_HOOK_UNDEFINED\" ; FAILWITH } { DROP } ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 3 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool True ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 3 ;\n                                 UPDATE 5 } }\n                           { IF_LEFT\n                               { DROP ;\n                                 DUP ;\n                                 CDR ;\n                                 CONTRACT %update_metadata_hook\n                                   (map nat (pair (nat %token_id) (map %token_info string bytes))) ;\n                                 IF_NONE\n                                   { PUSH string \"FA_UPDATE_METADATA_HOOK_UNDEFINED\" ; FAILWITH }\n                                   { DROP } ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 8 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool True ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 8 ;\n                                 UPDATE 5 }\n                               { DROP ;\n                                 DUP ;\n                                 CDR ;\n                                 CONTRACT %mint_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                                 IF_NONE { PUSH string \"FA_MINT_HOOK_UNDEFINED\" ; FAILWITH } { DROP } ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool True ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 5 ;\n                                 UPDATE 5 } } }\n                       { DROP ;\n                         DUP ;\n                         CDR ;\n                         CONTRACT %transfer_hook\n                           (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;\n                         IF_NONE { PUSH string \"FA_TRANSFER_HOOK_UNDEFINED\" ; FAILWITH } { DROP } ;\n                         DUP 2 ;\n                         DUP 3 ;\n                         GET 5 ;\n                         DIG 3 ;\n                         GET 5 ;\n                         CAR ;\n                         DIG 3 ;\n                         CDR ;\n                         PUSH bool True ;\n                         SWAP ;\n                         UPDATE ;\n                         UPDATE 1 ;\n                         UPDATE 5 } }\n                   { DUP ;\n                     CAR ;\n                     IF_LEFT\n                       { IF_LEFT\n                           { IF_LEFT\n                               { DROP ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 7 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool False ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 7 ;\n                                 UPDATE 5 }\n                               { DROP ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 3 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool False ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 3 ;\n                                 UPDATE 5 } }\n                           { IF_LEFT\n                               { DROP ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 8 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool False ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 8 ;\n                                 UPDATE 5 }\n                               { DROP ;\n                                 DUP 2 ;\n                                 DUP 3 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 GET 5 ;\n                                 GET 5 ;\n                                 DIG 3 ;\n                                 CDR ;\n                                 PUSH bool False ;\n                                 SWAP ;\n                                 UPDATE ;\n                                 UPDATE 5 ;\n                                 UPDATE 5 } } }\n                       { DROP ;\n                         DUP 2 ;\n                         DUP 3 ;\n                         GET 5 ;\n                         DIG 3 ;\n                         GET 5 ;\n                         CAR ;\n                         DIG 3 ;\n                         CDR ;\n                         PUSH bool False ;\n                         SWAP ;\n                         UPDATE ;\n                         UPDATE 1 ;\n                         UPDATE 5 } } } }\n        { ITER { IF_LEFT\n                   { DUP ;\n                     CAR ;\n                     IF_LEFT\n                       { IF_LEFT\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 5 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool True ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 5 ;\n                             UPDATE 3 }\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 9 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool True ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 9 ;\n                             UPDATE 3 } }\n                       { IF_LEFT\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 7 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool True ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 7 ;\n                             UPDATE 3 }\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 10 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool True ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 10 ;\n                             UPDATE 3 } } }\n                   { DUP ;\n                     CAR ;\n                     IF_LEFT\n                       { IF_LEFT\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 5 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool False ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 5 ;\n                             UPDATE 3 }\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 9 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool False ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 9 ;\n                             UPDATE 3 } }\n                       { IF_LEFT\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 7 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool False ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 7 ;\n                             UPDATE 3 }\n                           { DROP ;\n                             DUP 2 ;\n                             DUP 3 ;\n                             GET 3 ;\n                             DIG 3 ;\n                             GET 3 ;\n                             GET 10 ;\n                             DIG 3 ;\n                             CDR ;\n                             PUSH bool False ;\n                             SWAP ;\n                             UPDATE ;\n                             UPDATE 10 ;\n                             UPDATE 3 } } } } } } ;\n  NIL operation ;\n  PAIR }",
  "{ PUSH (pair (lambda\n                (pair address\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                bool)\n             (lambda\n                (pair address\n                      (big_map string bytes)\n                      (pair address (option address) (set address) (set address) (set address) (set address))\n                      (pair (set address) (set address) (set address) (set address) (set address))\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      (big_map nat unit)\n                      nat\n                      (map address nat))\n                bool))\n       (Pair { UNPAIR ; SWAP ; GET 3 ; GET 10 ; SWAP ; MEM }\n             { UNPAIR ; SWAP ; GET 3 ; GET 9 ; SWAP ; MEM }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR ;\n    DIG 2 ;\n    UNPAIR ;\n    IF_LEFT\n      { IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            IF_LEFT\n              { SWAP ;\n                PUSH string \"FA2_INVALID_METADATA_MANAGER_ACCESS\" ;\n                DUP 2 ;\n                SENDER ;\n                PAIR ;\n                DIG 4 ;\n                SWAP ;\n                EXEC ;\n                IF { DROP } { FAILWITH } ;\n                SWAP ;\n                ITER { DUP 2 ;\n                       DIG 2 ;\n                       GET 21 ;\n                       UNIT ;\n                       DIG 3 ;\n                       SWAP ;\n                       SOME ;\n                       SWAP ;\n                       UPDATE ;\n                       UPDATE 21 } }\n              { DIG 2 ;\n                DROP 2 ;\n                PUSH string \"FA2_NO_PENDING_OWNER\" ;\n                DUP 2 ;\n                GET 3 ;\n                GET 3 ;\n                IF_NONE { FAILWITH } { SWAP ; DROP } ;\n                PUSH string \"FA2_INVALID_PENDING_OWNER_ACCESS\" ;\n                DUP 2 ;\n                SENDER ;\n                COMPARE ;\n                EQ ;\n                IF { DROP } { FAILWITH } ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 3 ;\n                DIG 2 ;\n                UPDATE 1 ;\n                UPDATE 3 ;\n                DUP ;\n                GET 3 ;\n                NONE address ;\n                UPDATE 3 ;\n                UPDATE 3 } }\n          { IF_LEFT\n              { ITER { IF_LEFT\n                         { IF_LEFT\n                             { IF_LEFT\n                                 { DROP ;\n                                   PUSH string \"FA2_INVALID_CREATOR_ACCESS\" ;\n                                   DUP 2 ;\n                                   SENDER ;\n                                   SWAP ;\n                                   GET 3 ;\n                                   GET 5 ;\n                                   SWAP ;\n                                   MEM ;\n                                   IF { DROP } { FAILWITH } ;\n                                   DUP ;\n                                   DUP 2 ;\n                                   GET 3 ;\n                                   DIG 2 ;\n                                   GET 3 ;\n                                   GET 5 ;\n                                   SENDER ;\n                                   PUSH bool False ;\n                                   SWAP ;\n                                   UPDATE ;\n                                   UPDATE 5 ;\n                                   UPDATE 3 }\n                                 { DROP ;\n                                   PUSH string \"FA2_INVALID_METADATA_MANAGER_ACCESS\" ;\n                                   DUP 2 ;\n                                   SENDER ;\n                                   PAIR ;\n                                   DUP 5 ;\n                                   SWAP ;\n                                   EXEC ;\n                                   IF { DROP } { FAILWITH } ;\n                                   DUP ;\n                                   DUP 2 ;\n                                   GET 3 ;\n                                   DIG 2 ;\n                                   GET 3 ;\n                                   GET 9 ;\n                                   SENDER ;\n                                   PUSH bool False ;\n                                   SWAP ;\n                                   UPDATE ;\n                                   UPDATE 9 ;\n                                   UPDATE 3 } }\n                             { IF_LEFT\n                                 { DROP ;\n                                   PUSH string \"FA2_INVALID_MINTER_ACCESS\" ;\n                                   DUP 2 ;\n                                   SENDER ;\n                                   SWAP ;\n                                   GET 3 ;\n                                   GET 7 ;\n                                   SWAP ;\n                                   MEM ;\n                                   IF { DROP } { FAILWITH } ;\n                                   DUP ;\n                                   DUP 2 ;\n                                   GET 3 ;\n                                   DIG 2 ;\n                                   GET 3 ;\n                                   GET 7 ;\n                                   SENDER ;\n                                   PUSH bool False ;\n                                   SWAP ;\n                                   UPDATE ;\n                                   UPDATE 7 ;\n                                   UPDATE 3 }\n                                 { DROP ;\n                                   PUSH string \"FA2_INVALID_OWNER_ACCESS\" ;\n                                   DUP 2 ;\n                                   SENDER ;\n                                   SWAP ;\n                                   GET 3 ;\n                                   CAR ;\n                                   SWAP ;\n                                   COMPARE ;\n                                   EQ ;\n                                   IF { DROP } { FAILWITH } ;\n                                   DUP ;\n                                   GET 3 ;\n                                   PUSH address \"tz1Ke2h7sDdakHJQh8WX4Z372du1KChsksyU\" ;\n                                   UPDATE 1 ;\n                                   UPDATE 3 } } }\n                         { DROP ;\n                           PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n                           DUP 2 ;\n                           SENDER ;\n                           PAIR ;\n                           DUP 4 ;\n                           SWAP ;\n                           EXEC ;\n                           IF { DROP } { FAILWITH } ;\n                           DUP ;\n                           DUP 2 ;\n                           GET 3 ;\n                           DIG 2 ;\n                           GET 3 ;\n                           GET 10 ;\n                           SENDER ;\n                           PUSH bool False ;\n                           SWAP ;\n                           UPDATE ;\n                           UPDATE 10 ;\n                           UPDATE 3 } } ;\n                SWAP ;\n                DIG 2 ;\n                DROP 2 }\n              { DIG 3 ;\n                DROP ;\n                SWAP ;\n                PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n                DUP 2 ;\n                SENDER ;\n                PAIR ;\n                DIG 4 ;\n                SWAP ;\n                EXEC ;\n                IF { DROP } { FAILWITH } ;\n                SWAP ;\n                UPDATE 22 } } ;\n        NIL operation }\n      { IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_METADATA_MANAGER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            PAIR ;\n            DIG 4 ;\n            SWAP ;\n            EXEC ;\n            IF { DROP } { FAILWITH } ;\n            NIL operation ;\n            DUP 3 ;\n            ITER { UNPAIR ;\n                   DUP 2 ;\n                   CAR ;\n                   DUP 2 ;\n                   COMPARE ;\n                   EQ ;\n                   IF {} { PUSH string \"FA2_TOKEN_ID_MISMATCH\" ; FAILWITH } ;\n                   PUSH string \"FA_TOKEN_METADATA_UPDATE_DENIED\" ;\n                   PUSH bool False ;\n                   DUP 6 ;\n                   DUP 4 ;\n                   SWAP ;\n                   GET 21 ;\n                   SWAP ;\n                   GET ;\n                   IF_NONE { PUSH bool False } { DROP ; PUSH bool True } ;\n                   COMPARE ;\n                   EQ ;\n                   IF { DROP } { FAILWITH } ;\n                   DUP 4 ;\n                   DIG 4 ;\n                   GET 15 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   SWAP ;\n                   SOME ;\n                   SWAP ;\n                   UPDATE ;\n                   UPDATE 15 ;\n                   DUG 3 ;\n                   DUG 2 ;\n                   CDR ;\n                   SOME ;\n                   DIG 2 ;\n                   PAIR ;\n                   EMIT %token_metadata_update\n                     (pair (nat %token_id) (option %new_metadata (map string bytes))) ;\n                   CONS } ;\n            DUP 2 ;\n            GET 5 ;\n            GET 8 ;\n            ITER { CONTRACT %update_metadata_hook\n                     (map nat (pair (nat %token_id) (map %token_info string bytes))) ;\n                   IF_NONE { PUSH string \"FA_UPDATE_METADATA_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            DIG 2 ;\n            DROP }\n          { DIG 3 ;\n            DROP ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            PAIR ;\n            DIG 4 ;\n            SWAP ;\n            EXEC ;\n            IF { DROP } { FAILWITH } ;\n            NIL operation ;\n            DIG 2 ;\n            ITER { UNPAIR ;\n                   DUP 4 ;\n                   DIG 4 ;\n                   GET 17 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   SWAP ;\n                   SOME ;\n                   SWAP ;\n                   UPDATE ;\n                   UPDATE 17 ;\n                   DUG 3 ;\n                   DUG 2 ;\n                   SOME ;\n                   DIG 2 ;\n                   PAIR ;\n                   EMIT %token_royalties_update\n                     (pair (nat %token_id)\n                           (option %new_royalties (pair (nat %total_shares) (map %shares address nat)))) ;\n                   CONS } } } ;\n    PAIR } }"
]
