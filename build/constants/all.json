[
  "{ PUSH nat 0 ;\n  DUP 2 ;\n  CDR ;\n  CAR ;\n  COMPARE ;\n  GT ;\n  IF { PUSH nat 0 ;\n       DUP 2 ;\n       CDR ;\n       CDR ;\n       ITER { CDR ; ADD } ;\n       DUP 2 ;\n       CDR ;\n       CAR ;\n       SWAP ;\n       COMPARE ;\n       LE ;\n       IF {} { PUSH string \"INVALID_SHARE_VALUES\" ; FAILWITH } ;\n       DUP ;\n       CDR ;\n       CDR ;\n       MAP { CDR ;\n             DUP 2 ;\n             CDR ;\n             CAR ;\n             SWAP ;\n             DUP 3 ;\n             CAR ;\n             MUL ;\n             EDIV ;\n             IF_NONE { PUSH string \"DIV by 0\" ; FAILWITH } {} ;\n             CAR } ;\n       SWAP ;\n       DROP }\n     { DROP ; EMPTY_MAP address nat } }",

  "{ PUSH (pair (lambda\n                (pair (or (or (or unit unit) (or unit unit)) unit)\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                (set address))\n             (lambda\n                (pair address (or (or unit unit) (or unit unit)))\n                (lambda\n                   (pair (big_map string bytes)\n                         address\n                         nat\n                         (big_map nat nat)\n                         (big_map (pair address nat) nat)\n                         (big_map (pair address address nat) unit)\n                         (big_map nat (pair nat (map string bytes)))\n                         (big_map nat (pair nat (map address nat)))\n                         (big_map nat nat)\n                         nat\n                         (map address nat))\n                   bool))\n             (lambda\n                (pair nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda (pair address string) unit)\n             (lambda\n                (pair address\n                      address\n                      nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda\n                (pair address\n                      nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                nat)\n             (lambda\n                (pair nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                nat))\n       (Pair { UNPAIR ;\n               SWAP ;\n               GET 3 ;\n               SWAP ;\n               SELF_ADDRESS ;\n               PAIR ;\n               VIEW \"get_hooks\" (set address) ;\n               IF_NONE { EMPTY_SET address } {} }\n             { UNPAIR ;\n               LAMBDA\n                 (pair (pair address (or (or unit unit) (or unit unit)))\n                       (pair (big_map string bytes)\n                             address\n                             nat\n                             (big_map nat nat)\n                             (big_map (pair address nat) nat)\n                             (big_map (pair address address nat) unit)\n                             (big_map nat (pair nat (map string bytes)))\n                             (big_map nat (pair nat (map address nat)))\n                             (big_map nat nat)\n                             (pair nat (map address nat))))\n                 bool\n                 { UNPAIR ;\n                   UNPAIR ;\n                   DIG 2 ;\n                   GET 3 ;\n                   DUG 2 ;\n                   SELF_ADDRESS ;\n                   PAIR ;\n                   PAIR ;\n                   VIEW \"has_role\" bool ;\n                   IF_NONE { PUSH bool False } {} } ;\n               DUP 3 ;\n               DUP 3 ;\n               PAIR ;\n               APPLY ;\n               SWAP ;\n               DIG 2 ;\n               DROP 2 }\n             { UNPAIR ;\n               SWAP ;\n               GET 5 ;\n               SWAP ;\n               COMPARE ;\n               LT ;\n               IF { UNIT } { PUSH string \"FA2_TOKEN_UNDEFINED\" ; FAILWITH } }\n             { UNPAIR ; SENDER ; COMPARE ; EQ ; IF { DROP ; UNIT } { FAILWITH } }\n             { UNPAIR 4 ;\n               PUSH bool True ;\n               DIG 4 ;\n               GET 11 ;\n               DIG 4 ;\n               DUP 5 ;\n               PAIR ;\n               DUP 4 ;\n               PAIR ;\n               MEM ;\n               DIG 3 ;\n               DIG 3 ;\n               COMPARE ;\n               EQ ;\n               OR ;\n               COMPARE ;\n               EQ ;\n               IF { UNIT } { PUSH string \"FA2_NOT_OPERATOR\" ; FAILWITH } }\n             { UNPAIR 3 ;\n               DIG 2 ;\n               GET 9 ;\n               DUG 2 ;\n               PAIR ;\n               GET ;\n               IF_NONE { PUSH nat 0 } {} }\n             { UNPAIR ; SWAP ; GET 7 ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR 7 ;\n    DIG 7 ;\n    UNPAIR ;\n    PUSH string \"FA2_DONT_SEND_TEZ\" ;\n    PUSH mutez 0 ;\n    AMOUNT ;\n    COMPARE ;\n    EQ ;\n    IF { DROP } { FAILWITH } ;\n    IF_LEFT\n      { DIG 5 ;\n        DROP ;\n        IF_LEFT\n          { DIG 2 ;\n            DIG 3 ;\n            DIG 5 ;\n            DIG 7 ;\n            DROP 4 ;\n            IF_LEFT\n              { DIG 2 ;\n                DROP ;\n                ITER { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ;\n                       DUP 2 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       DIG 4 ;\n                       CAR ;\n                       PAIR 3 ;\n                       DUP 5 ;\n                       SWAP ;\n                       EXEC ;\n                       COMPARE ;\n                       GE ;\n                       IF { DROP } { FAILWITH } } ;\n                SWAP ;\n                DROP ;\n                NIL operation }\n              { NIL (pair (pair address nat) nat) ;\n                DUP 2 ;\n                CAR ;\n                ITER { DUP 4 ;\n                       DUP 2 ;\n                       CDR ;\n                       PAIR ;\n                       DUP 6 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP 4 ;\n                       DUP 2 ;\n                       CDR ;\n                       DUP 3 ;\n                       CAR ;\n                       PAIR 3 ;\n                       DUP 7 ;\n                       SWAP ;\n                       EXEC ;\n                       SWAP ;\n                       PAIR ;\n                       CONS } ;\n                DIG 3 ;\n                DIG 4 ;\n                DROP 2 ;\n                NIL operation ;\n                DIG 2 ;\n                CDR ;\n                PUSH mutez 0 ;\n                DIG 3 ;\n                TRANSFER_TOKENS ;\n                CONS } }\n          { IF_LEFT\n              { DIG 3 ;\n                DROP ;\n                SWAP ;\n                DUP ;\n                DUP 3 ;\n                GET 3 ;\n                SENDER ;\n                DUP 5 ;\n                CAR ;\n                PAIR 4 ;\n                DIG 5 ;\n                SWAP ;\n                EXEC ;\n                DROP ;\n                DUP ;\n                DUP 3 ;\n                GET 3 ;\n                PAIR ;\n                DIG 4 ;\n                SWAP ;\n                EXEC ;\n                DROP ;\n                DUP ;\n                DUP 3 ;\n                GET 3 ;\n                DUP 4 ;\n                CAR ;\n                PAIR 3 ;\n                DIG 4 ;\n                SWAP ;\n                EXEC ;\n                DUP 3 ;\n                GET 4 ;\n                DUP 2 ;\n                COMPARE ;\n                GE ;\n                IF {} { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } ;\n                DUP 3 ;\n                GET 4 ;\n                SWAP ;\n                SUB ;\n                ISNAT ;\n                IF_NONE { PUSH string \"option is None\" ; FAILWITH } {} ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 9 ;\n                DUP 3 ;\n                SOME ;\n                DUP 5 ;\n                GET 3 ;\n                DUP 6 ;\n                CAR ;\n                PAIR ;\n                UPDATE ;\n                UPDATE 9 ;\n                SWAP ;\n                DUP 3 ;\n                GET 4 ;\n                DUP 3 ;\n                DUP 5 ;\n                GET 3 ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                SUB ;\n                ISNAT ;\n                IF_NONE { PUSH string \"option is None\" ; FAILWITH } {} ;\n                DUP 3 ;\n                DIG 3 ;\n                GET 7 ;\n                DUP 3 ;\n                SOME ;\n                DUP 6 ;\n                GET 3 ;\n                UPDATE ;\n                UPDATE 7 ;\n                DUG 2 ;\n                NIL operation ;\n                DUP 4 ;\n                UNIT ;\n                LEFT unit ;\n                LEFT (or unit unit) ;\n                LEFT unit ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                ITER { CONTRACT %burn_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                       IF_NONE { PUSH string \"FA_BURN_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                       PUSH mutez 0 ;\n                       DUP 7 ;\n                       TRANSFER_TOKENS ;\n                       CONS } ;\n                PUSH int -1 ;\n                DUP 6 ;\n                GET 4 ;\n                INT ;\n                MUL ;\n                DIG 2 ;\n                DUP 6 ;\n                GET 3 ;\n                NIL (pair address int) ;\n                PUSH int -1 ;\n                DUP 9 ;\n                GET 4 ;\n                INT ;\n                MUL ;\n                DUP 9 ;\n                CAR ;\n                PAIR ;\n                CONS ;\n                PAIR 4 ;\n                EMIT %total_supply_update\n                  (pair (list (pair (address %owner) (int %owner_diff)))\n                        (nat %token_id)\n                        (nat %new_total_supply)\n                        (int %diff)) ;\n                CONS ;\n                PUSH int -1 ;\n                DUP 5 ;\n                GET 4 ;\n                INT ;\n                MUL ;\n                DIG 2 ;\n                DUP 5 ;\n                GET 3 ;\n                DIG 5 ;\n                CAR ;\n                PAIR 4 ;\n                EMIT %balance_update\n                  (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) }\n              { DIG 4 ;\n                DIG 5 ;\n                DIG 6 ;\n                DIG 7 ;\n                DROP 4 ;\n                SWAP ;\n                PUSH string \"FA2_INVALID_CREATOR_ACCESS\" ;\n                DUP 2 ;\n                UNIT ;\n                LEFT unit ;\n                LEFT (or unit unit) ;\n                SENDER ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                SWAP ;\n                EXEC ;\n                IF { DROP } { FAILWITH } ;\n                DUP 2 ;\n                GET 6 ;\n                IF_NONE { DUP ; GET 5 } {} ;\n                PUSH string \"FA2_DUP_TOKEN_ID\" ;\n                PUSH bool False ;\n                DUP 4 ;\n                GET 13 ;\n                DUP 4 ;\n                MEM ;\n                COMPARE ;\n                EQ ;\n                IF { DROP } { FAILWITH } ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 13 ;\n                DUP 4 ;\n                CAR ;\n                DUP 4 ;\n                PAIR ;\n                DUP 4 ;\n                SWAP ;\n                SOME ;\n                SWAP ;\n                UPDATE ;\n                UPDATE 13 ;\n                SWAP ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 7 ;\n                PUSH nat 0 ;\n                DUP 4 ;\n                SWAP ;\n                SOME ;\n                SWAP ;\n                UPDATE ;\n                UPDATE 7 ;\n                SWAP ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 17 ;\n                DUP 4 ;\n                GET 3 ;\n                DUP 4 ;\n                SWAP ;\n                SOME ;\n                SWAP ;\n                UPDATE ;\n                UPDATE 17 ;\n                SWAP ;\n                DUP 3 ;\n                GET 5 ;\n                IF_NONE\n                  {}\n                  { DUP 3 ;\n                    DIG 3 ;\n                    GET 15 ;\n                    DIG 2 ;\n                    DUP 4 ;\n                    SWAP ;\n                    SOME ;\n                    SWAP ;\n                    UPDATE ;\n                    UPDATE 15 ;\n                    SWAP } ;\n                DUP 2 ;\n                PUSH nat 1 ;\n                DUP 3 ;\n                DIG 4 ;\n                GET 5 ;\n                DUP 2 ;\n                DUP 2 ;\n                COMPARE ;\n                GT ;\n                IF { SWAP ; DROP } { DROP } ;\n                ADD ;\n                UPDATE 5 ;\n                SWAP ;\n                NIL operation ;\n                DUP 3 ;\n                UNIT ;\n                RIGHT unit ;\n                LEFT (or unit unit) ;\n                LEFT unit ;\n                PAIR ;\n                DIG 5 ;\n                SWAP ;\n                EXEC ;\n                ITER { CONTRACT %create_hook\n                         (pair (map %token_metadata string bytes)\n                               (nat %max_supply)\n                               (option %royalties (pair (nat %total_shares) (map %shares address nat)))\n                               (option %token_id nat)) ;\n                       IF_NONE { PUSH string \"FA_CREATE_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                       PUSH mutez 0 ;\n                       DUP 6 ;\n                       TRANSFER_TOKENS ;\n                       CONS } ;\n                DIG 3 ;\n                CAR ;\n                SOME ;\n                DIG 2 ;\n                PAIR ;\n                EMIT %token_metadata_update\n                  (pair (nat %token_id) (option %new_metadata (map string bytes))) } ;\n            CONS } }\n      { IF_LEFT\n          { DIG 5 ;\n            DIG 6 ;\n            DROP 2 ;\n            IF_LEFT\n              { SWAP ;\n                PUSH string \"FA2_INVALID_MINTER_ACCESS\" ;\n                DUP 2 ;\n                UNIT ;\n                LEFT unit ;\n                RIGHT (or unit unit) ;\n                SENDER ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                SWAP ;\n                EXEC ;\n                IF { DROP } { FAILWITH } ;\n                DUP ;\n                DUP 3 ;\n                GET 3 ;\n                PAIR ;\n                DIG 4 ;\n                SWAP ;\n                EXEC ;\n                DROP ;\n                DUP 2 ;\n                GET 4 ;\n                DUP 2 ;\n                DUP 4 ;\n                GET 3 ;\n                DUP 5 ;\n                CAR ;\n                PAIR 3 ;\n                DIG 5 ;\n                SWAP ;\n                EXEC ;\n                ADD ;\n                DUP 2 ;\n                DIG 2 ;\n                GET 9 ;\n                DUP 3 ;\n                SOME ;\n                DUP 5 ;\n                GET 3 ;\n                DUP 6 ;\n                CAR ;\n                PAIR ;\n                UPDATE ;\n                UPDATE 9 ;\n                SWAP ;\n                DUP 3 ;\n                GET 4 ;\n                DUP 3 ;\n                DUP 5 ;\n                GET 3 ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                ADD ;\n                DUP 3 ;\n                DIG 3 ;\n                GET 7 ;\n                DUP 3 ;\n                SOME ;\n                DUP 6 ;\n                GET 3 ;\n                UPDATE ;\n                UPDATE 7 ;\n                DUG 2 ;\n                DUP 3 ;\n                DUP 5 ;\n                GET 3 ;\n                SWAP ;\n                GET 17 ;\n                SWAP ;\n                GET ;\n                IF_NONE { PUSH nat 0 } {} ;\n                PUSH nat 0 ;\n                DUP 2 ;\n                COMPARE ;\n                GT ;\n                IF { DUP 2 ;\n                     COMPARE ;\n                     LE ;\n                     IF {} { PUSH string \"FA2_MAX_SUPPLY_EXCEEDED\" ; FAILWITH } }\n                   { DROP } ;\n                NIL operation ;\n                DUP 4 ;\n                UNIT ;\n                RIGHT unit ;\n                RIGHT (or unit unit) ;\n                LEFT unit ;\n                PAIR ;\n                DIG 6 ;\n                SWAP ;\n                EXEC ;\n                ITER { CONTRACT %mint_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                       IF_NONE { PUSH string \"FA_MINT_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                       PUSH mutez 0 ;\n                       DUP 7 ;\n                       TRANSFER_TOKENS ;\n                       CONS } ;\n                DUP 5 ;\n                GET 4 ;\n                INT ;\n                DIG 2 ;\n                DUP 6 ;\n                GET 3 ;\n                NIL (pair address int) ;\n                DUP 8 ;\n                GET 4 ;\n                INT ;\n                DUP 9 ;\n                CAR ;\n                PAIR ;\n                CONS ;\n                PAIR 4 ;\n                EMIT %total_supply_update\n                  (pair (list (pair (address %owner) (int %owner_diff)))\n                        (nat %token_id)\n                        (nat %new_total_supply)\n                        (int %diff)) ;\n                CONS ;\n                DUP 4 ;\n                GET 4 ;\n                INT ;\n                DIG 2 ;\n                DUP 5 ;\n                GET 3 ;\n                DIG 5 ;\n                CAR ;\n                PAIR 4 ;\n                EMIT %balance_update\n                  (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) ;\n                CONS }\n              { DIG 4 ;\n                DIG 5 ;\n                DIG 6 ;\n                DROP 3 ;\n                IF_LEFT\n                  { DIG 2 ;\n                    DROP ;\n                    IF_LEFT\n                      { DIG 2 ;\n                        DROP ;\n                        SWAP ;\n                        PUSH string \"FA2_INVALID_OWNER_ACCESS\" ;\n                        DUP 2 ;\n                        SENDER ;\n                        SWAP ;\n                        GET 3 ;\n                        SWAP ;\n                        SELF_ADDRESS ;\n                        PAIR ;\n                        VIEW \"is_owner\" bool ;\n                        IF_NONE { PUSH bool False } {} ;\n                        IF { DROP } { FAILWITH } ;\n                        EMPTY_BIG_MAP string bytes ;\n                        UPDATE 1 ;\n                        SWAP ;\n                        ITER { UNPAIR ;\n                               DUP 3 ;\n                               DIG 3 ;\n                               CAR ;\n                               DIG 3 ;\n                               DIG 3 ;\n                               SWAP ;\n                               SOME ;\n                               SWAP ;\n                               UPDATE ;\n                               UPDATE 1 } }\n                      { SWAP ;\n                        PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n                        DUP 2 ;\n                        UNIT ;\n                        RIGHT unit ;\n                        RIGHT (or unit unit) ;\n                        SENDER ;\n                        PAIR ;\n                        DIG 5 ;\n                        SWAP ;\n                        EXEC ;\n                        SWAP ;\n                        EXEC ;\n                        IF { DROP } { FAILWITH } ;\n                        SWAP ;\n                        UPDATE 18 } ;\n                    NIL operation }\n                  { IF_LEFT\n                      { SWAP ;\n                        PUSH string \"FA2_INVALID_METADATA_MANAGER_ACCESS\" ;\n                        DUP 2 ;\n                        UNIT ;\n                        RIGHT unit ;\n                        LEFT (or unit unit) ;\n                        SENDER ;\n                        PAIR ;\n                        DIG 6 ;\n                        SWAP ;\n                        EXEC ;\n                        SWAP ;\n                        EXEC ;\n                        IF { DROP } { FAILWITH } ;\n                        NIL operation ;\n                        DUP 3 ;\n                        ITER { UNPAIR ;\n                               DUP 4 ;\n                               DIG 4 ;\n                               GET 13 ;\n                               DUP 4 ;\n                               DUP 4 ;\n                               PAIR ;\n                               SOME ;\n                               DUP 4 ;\n                               UPDATE ;\n                               UPDATE 13 ;\n                               DUG 3 ;\n                               DUG 2 ;\n                               SOME ;\n                               DIG 2 ;\n                               PAIR ;\n                               EMIT %token_metadata_update\n                                 (pair (nat %token_id) (option %new_metadata (map string bytes))) ;\n                               CONS } ;\n                        DUP 2 ;\n                        UNIT ;\n                        LEFT unit ;\n                        RIGHT (or unit unit) ;\n                        LEFT unit ;\n                        PAIR ;\n                        DIG 4 ;\n                        SWAP ;\n                        EXEC ;\n                        ITER { CONTRACT %update_metadata_hook (map nat (map string bytes)) ;\n                               IF_NONE { PUSH string \"FA_UPDATE_METADATA_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                               PUSH mutez 0 ;\n                               DUP 5 ;\n                               TRANSFER_TOKENS ;\n                               CONS } ;\n                        DIG 2 ;\n                        DROP }\n                      { DIG 2 ;\n                        DROP ;\n                        SWAP ;\n                        PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n                        DUP 2 ;\n                        UNIT ;\n                        RIGHT unit ;\n                        RIGHT (or unit unit) ;\n                        SENDER ;\n                        PAIR ;\n                        DIG 5 ;\n                        SWAP ;\n                        EXEC ;\n                        SWAP ;\n                        EXEC ;\n                        IF { DROP } { FAILWITH } ;\n                        NIL operation ;\n                        DIG 2 ;\n                        ITER { UNPAIR ;\n                               DUP 4 ;\n                               DIG 4 ;\n                               GET 15 ;\n                               DUP 4 ;\n                               SOME ;\n                               DUP 4 ;\n                               UPDATE ;\n                               UPDATE 15 ;\n                               DUG 3 ;\n                               DUG 2 ;\n                               SOME ;\n                               DIG 2 ;\n                               PAIR ;\n                               EMIT %token_royalties_update\n                                 (pair (nat %token_id)\n                                       (option %new_royalties (pair (nat %total_shares) (map %shares address nat)))) ;\n                               CONS } } } } }\n          { DIG 3 ;\n            DIG 8 ;\n            DROP 2 ;\n            IF_LEFT\n              { DIG 4 ;\n                DROP ;\n                SWAP ;\n                EMPTY_MAP (pair address nat) nat ;\n                NIL operation ;\n                DUP 4 ;\n                ITER { DUP ;\n                       CDR ;\n                       ITER { DUP 5 ;\n                              DUP 2 ;\n                              GET 3 ;\n                              SENDER ;\n                              DUP 5 ;\n                              CAR ;\n                              PAIR 4 ;\n                              DUP 10 ;\n                              SWAP ;\n                              EXEC ;\n                              DROP ;\n                              DUP 5 ;\n                              DUP 2 ;\n                              GET 3 ;\n                              PAIR ;\n                              DUP 9 ;\n                              SWAP ;\n                              EXEC ;\n                              DROP ;\n                              DUP 5 ;\n                              DUP 2 ;\n                              GET 3 ;\n                              DUP 4 ;\n                              CAR ;\n                              PAIR 3 ;\n                              DUP 11 ;\n                              SWAP ;\n                              EXEC ;\n                              DUP 2 ;\n                              GET 4 ;\n                              DUP 2 ;\n                              COMPARE ;\n                              GE ;\n                              IF {} { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } ;\n                              PUSH bool False ;\n                              DUP 6 ;\n                              DUP 4 ;\n                              GET 3 ;\n                              DUP 6 ;\n                              CAR ;\n                              PAIR ;\n                              MEM ;\n                              COMPARE ;\n                              EQ ;\n                              IF { DIG 4 ;\n                                   DUP 2 ;\n                                   DUP 4 ;\n                                   GET 3 ;\n                                   DUP 6 ;\n                                   CAR ;\n                                   PAIR ;\n                                   SWAP ;\n                                   SOME ;\n                                   SWAP ;\n                                   UPDATE ;\n                                   DUG 4 }\n                                 {} ;\n                              DUP 6 ;\n                              DIG 6 ;\n                              GET 9 ;\n                              DUP 4 ;\n                              GET 4 ;\n                              DIG 3 ;\n                              SUB ;\n                              ISNAT ;\n                              DUP 4 ;\n                              GET 3 ;\n                              DUP 6 ;\n                              CAR ;\n                              PAIR ;\n                              UPDATE ;\n                              UPDATE 9 ;\n                              DUG 4 ;\n                              DUP 5 ;\n                              DUP 2 ;\n                              GET 3 ;\n                              DUP 3 ;\n                              CAR ;\n                              PAIR 3 ;\n                              DUP 11 ;\n                              SWAP ;\n                              EXEC ;\n                              PUSH bool False ;\n                              DUP 6 ;\n                              DUP 4 ;\n                              GET 3 ;\n                              DUP 5 ;\n                              CAR ;\n                              PAIR ;\n                              MEM ;\n                              COMPARE ;\n                              EQ ;\n                              IF { DIG 4 ;\n                                   DUP 2 ;\n                                   DUP 4 ;\n                                   GET 3 ;\n                                   DUP 5 ;\n                                   CAR ;\n                                   PAIR ;\n                                   SWAP ;\n                                   SOME ;\n                                   SWAP ;\n                                   UPDATE ;\n                                   DUG 4 }\n                                 {} ;\n                              DUP 6 ;\n                              DIG 6 ;\n                              GET 9 ;\n                              DUP 4 ;\n                              GET 4 ;\n                              DIG 3 ;\n                              ADD ;\n                              SOME ;\n                              DUP 4 ;\n                              GET 3 ;\n                              DUP 5 ;\n                              CAR ;\n                              PAIR ;\n                              UPDATE ;\n                              UPDATE 9 ;\n                              DUG 4 ;\n                              DIG 2 ;\n                              DUP 2 ;\n                              GET 4 ;\n                              DUP 3 ;\n                              GET 3 ;\n                              DIG 3 ;\n                              CAR ;\n                              DUP 5 ;\n                              CAR ;\n                              PAIR 4 ;\n                              EMIT %transfer_event\n                                (pair (address %from_) (address %to_) (nat %token_id) (nat %amount)) ;\n                              CONS ;\n                              SWAP } ;\n                       DROP } ;\n                DIG 5 ;\n                DIG 6 ;\n                DROP 2 ;\n                DUP 3 ;\n                UNIT ;\n                RIGHT (or (or unit unit) (or unit unit)) ;\n                PAIR ;\n                DIG 5 ;\n                SWAP ;\n                EXEC ;\n                ITER { CONTRACT %transfer_hook\n                         (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;\n                       IF_NONE { PUSH string \"FA_TRANSFER_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                       PUSH mutez 0 ;\n                       DUP 6 ;\n                       TRANSFER_TOKENS ;\n                       CONS } ;\n                DIG 3 ;\n                DROP ;\n                SWAP ;\n                ITER { UNPAIR ;\n                       UNPAIR ;\n                       DUP 5 ;\n                       DUP 3 ;\n                       DUP 3 ;\n                       PAIR 3 ;\n                       DUP 7 ;\n                       SWAP ;\n                       EXEC ;\n                       DIG 3 ;\n                       DUP 2 ;\n                       SUB ;\n                       SWAP ;\n                       DIG 3 ;\n                       DIG 3 ;\n                       PAIR 4 ;\n                       EMIT %balance_update\n                         (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) ;\n                       CONS } ;\n                DIG 2 ;\n                DROP }\n              { DIG 2 ;\n                DIG 5 ;\n                DIG 6 ;\n                DROP 3 ;\n                SWAP ;\n                NIL operation ;\n                DIG 2 ;\n                ITER { IF_LEFT\n                         { DUP 3 ;\n                           DUP 2 ;\n                           GET 4 ;\n                           PAIR ;\n                           DUP 5 ;\n                           SWAP ;\n                           EXEC ;\n                           DROP ;\n                           PUSH string \"FA2_NOT_OWNER\" ;\n                           DUP 2 ;\n                           CAR ;\n                           PAIR ;\n                           DUP 6 ;\n                           SWAP ;\n                           EXEC ;\n                           DROP ;\n                           DUP 3 ;\n                           DIG 3 ;\n                           GET 11 ;\n                           UNIT ;\n                           SOME ;\n                           DUP 4 ;\n                           GET 4 ;\n                           DUP 5 ;\n                           GET 3 ;\n                           PAIR ;\n                           DUP 5 ;\n                           CAR ;\n                           PAIR ;\n                           UPDATE ;\n                           UPDATE 11 ;\n                           DUG 2 ;\n                           SWAP ;\n                           PUSH bool True ;\n                           DUP 3 ;\n                           GET 4 ;\n                           DUP 4 ;\n                           GET 3 ;\n                           DIG 4 ;\n                           CAR ;\n                           PAIR 4 ;\n                           EMIT %operator_update\n                             (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) }\n                         { DUP 3 ;\n                           DUP 2 ;\n                           GET 4 ;\n                           PAIR ;\n                           DUP 5 ;\n                           SWAP ;\n                           EXEC ;\n                           DROP ;\n                           PUSH string \"FA2_NOT_OWNER\" ;\n                           DUP 2 ;\n                           CAR ;\n                           PAIR ;\n                           DUP 6 ;\n                           SWAP ;\n                           EXEC ;\n                           DROP ;\n                           DUP 3 ;\n                           DIG 3 ;\n                           GET 11 ;\n                           DUP 3 ;\n                           GET 4 ;\n                           DUP 4 ;\n                           GET 3 ;\n                           PAIR ;\n                           DUP 4 ;\n                           CAR ;\n                           PAIR ;\n                           NONE unit ;\n                           SWAP ;\n                           UPDATE ;\n                           UPDATE 11 ;\n                           DUG 2 ;\n                           SWAP ;\n                           PUSH bool False ;\n                           DUP 3 ;\n                           GET 4 ;\n                           DUP 4 ;\n                           GET 3 ;\n                           DIG 4 ;\n                           CAR ;\n                           PAIR 4 ;\n                           EMIT %operator_update\n                             (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) } ;\n                       CONS } ;\n                DIG 2 ;\n                DIG 3 ;\n                DROP 2 } } } ;\n    PAIR } }",

  "{ PUSH (pair (lambda\n                (pair nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda address unit)\n             (lambda\n                (pair (pair address nat)\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                nat))\n       (Pair { UNPAIR ;\n               SWAP ;\n               GET 5 ;\n               SWAP ;\n               COMPARE ;\n               LT ;\n               IF { UNIT } { PUSH string \"FA2_TOKEN_UNDEFINED\" ; FAILWITH } }\n             { PUSH string \"FA2_NOT_OWNER\" ;\n               SWAP ;\n               SENDER ;\n               COMPARE ;\n               EQ ;\n               IF { DROP ; UNIT } { FAILWITH } }\n             { UNPAIR ;\n               UNPAIR ;\n               DIG 2 ;\n               GET 9 ;\n               DUG 2 ;\n               PAIR ;\n               GET ;\n               IF_NONE { PUSH nat 0 } {} }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR 3 ;\n    DIG 3 ;\n    UNPAIR ;\n    IF_LEFT\n      { DIG 3 ;\n        DROP ;\n        IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            ITER { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ;\n                   DUP 2 ;\n                   GET 4 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   GET 3 ;\n                   DIG 4 ;\n                   CAR ;\n                   PAIR ;\n                   PAIR ;\n                   DUP 5 ;\n                   SWAP ;\n                   EXEC ;\n                   COMPARE ;\n                   GE ;\n                   IF { DROP } { FAILWITH } } ;\n            SWAP ;\n            DROP ;\n            NIL operation }\n          { NIL (pair (pair address nat) nat) ;\n            DUP 2 ;\n            CAR ;\n            ITER { DUP 4 ;\n                   DUP 2 ;\n                   CDR ;\n                   PAIR ;\n                   DUP 6 ;\n                   SWAP ;\n                   EXEC ;\n                   DROP ;\n                   DUP 4 ;\n                   DUP 2 ;\n                   CDR ;\n                   DUP 3 ;\n                   CAR ;\n                   PAIR ;\n                   PAIR ;\n                   DUP 7 ;\n                   SWAP ;\n                   EXEC ;\n                   SWAP ;\n                   PAIR ;\n                   CONS } ;\n            DIG 3 ;\n            DIG 4 ;\n            DROP 2 ;\n            NIL operation ;\n            DIG 2 ;\n            CDR ;\n            PUSH mutez 0 ;\n            DIG 3 ;\n            TRANSFER_TOKENS ;\n            CONS } }\n      { IF_LEFT\n          { DIG 3 ;\n            DROP ;\n            DUP 2 ;\n            EMPTY_MAP (pair address nat) nat ;\n            NIL operation ;\n            DUP 4 ;\n            ITER { DUP ;\n                   CDR ;\n                   ITER { DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          PAIR ;\n                          SENDER ;\n                          DUP 4 ;\n                          CAR ;\n                          DIG 2 ;\n                          UNPAIR ;\n                          PUSH bool True ;\n                          DIG 2 ;\n                          GET 11 ;\n                          DIG 2 ;\n                          DUP 5 ;\n                          PAIR ;\n                          DUP 4 ;\n                          PAIR ;\n                          MEM ;\n                          DIG 3 ;\n                          DIG 3 ;\n                          COMPARE ;\n                          EQ ;\n                          OR ;\n                          COMPARE ;\n                          EQ ;\n                          IF {} { PUSH string \"FA2_NOT_OPERATOR\" ; FAILWITH } ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          PAIR ;\n                          DUP 9 ;\n                          SWAP ;\n                          EXEC ;\n                          DROP ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          DUP 4 ;\n                          CAR ;\n                          PAIR ;\n                          PAIR ;\n                          DUP 10 ;\n                          SWAP ;\n                          EXEC ;\n                          DUP 2 ;\n                          GET 4 ;\n                          DUP 2 ;\n                          COMPARE ;\n                          LT ;\n                          IF { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } {} ;\n                          PUSH bool False ;\n                          DUP 6 ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 6 ;\n                          CAR ;\n                          PAIR ;\n                          MEM ;\n                          COMPARE ;\n                          EQ ;\n                          IF { DIG 4 ;\n                               DUP 2 ;\n                               DUP 4 ;\n                               GET 3 ;\n                               DUP 6 ;\n                               CAR ;\n                               PAIR ;\n                               SWAP ;\n                               SOME ;\n                               SWAP ;\n                               UPDATE ;\n                               DUG 4 }\n                             {} ;\n                          DUP 6 ;\n                          DIG 6 ;\n                          GET 9 ;\n                          DUP 4 ;\n                          GET 4 ;\n                          DIG 3 ;\n                          SUB ;\n                          ABS ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 6 ;\n                          CAR ;\n                          PAIR ;\n                          SWAP ;\n                          SOME ;\n                          SWAP ;\n                          UPDATE ;\n                          UPDATE 9 ;\n                          DUG 4 ;\n                          DUP 5 ;\n                          DUP 2 ;\n                          GET 3 ;\n                          DUP 3 ;\n                          CAR ;\n                          PAIR ;\n                          PAIR ;\n                          DUP 10 ;\n                          SWAP ;\n                          EXEC ;\n                          PUSH bool False ;\n                          DUP 6 ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR ;\n                          MEM ;\n                          COMPARE ;\n                          EQ ;\n                          IF { DIG 4 ;\n                               DUP 2 ;\n                               DUP 4 ;\n                               GET 3 ;\n                               DUP 5 ;\n                               CAR ;\n                               PAIR ;\n                               SWAP ;\n                               SOME ;\n                               SWAP ;\n                               UPDATE ;\n                               DUG 4 }\n                             {} ;\n                          DUP 6 ;\n                          DIG 6 ;\n                          GET 9 ;\n                          DUP 4 ;\n                          GET 4 ;\n                          DIG 3 ;\n                          ADD ;\n                          DUP 4 ;\n                          GET 3 ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR ;\n                          SWAP ;\n                          SOME ;\n                          SWAP ;\n                          UPDATE ;\n                          UPDATE 9 ;\n                          DUG 4 ;\n                          DIG 2 ;\n                          DUP 2 ;\n                          GET 4 ;\n                          DUP 3 ;\n                          GET 3 ;\n                          DIG 3 ;\n                          CAR ;\n                          DUP 5 ;\n                          CAR ;\n                          PAIR 4 ;\n                          EMIT %transfer_event\n                            (pair (address %from_) (address %to_) (nat %token_id) (nat %amount)) ;\n                          CONS ;\n                          SWAP } ;\n                   DROP } ;\n            DIG 5 ;\n            DROP ;\n            SWAP ;\n            ITER { UNPAIR ;\n                   DUP 4 ;\n                   DUP 2 ;\n                   PAIR ;\n                   DUP 8 ;\n                   SWAP ;\n                   EXEC ;\n                   DIG 2 ;\n                   DUP 2 ;\n                   SUB ;\n                   SWAP ;\n                   DUP 3 ;\n                   CDR ;\n                   DIG 3 ;\n                   CAR ;\n                   PAIR 4 ;\n                   EMIT %balance_update\n                     (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) ;\n                   CONS } ;\n            DIG 4 ;\n            DROP ;\n            PAIR ;\n            DIG 2 ;\n            GET 3 ;\n            SELF_ADDRESS ;\n            VIEW \"get_transfer_hooks\" (set address) ;\n            IF_NONE { EMPTY_SET address } {} ;\n            ITER { DUP 2 ;\n                   CDR ;\n                   DIG 2 ;\n                   CAR ;\n                   DIG 2 ;\n                   CONTRACT %transfer_hook\n                     (list (pair (address %from_) (list %txs (pair (address %to_) (nat %token_id) (nat %amount))))) ;\n                   IF_NONE { PUSH string \"FA_TRANSFER_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS ;\n                   PAIR } ;\n            SWAP ;\n            DROP ;\n            UNPAIR }\n          { DIG 4 ;\n            DROP ;\n            SWAP ;\n            NIL operation ;\n            DIG 2 ;\n            ITER { IF_LEFT\n                     { DUP 3 ;\n                       DUP 2 ;\n                       GET 4 ;\n                       PAIR ;\n                       DUP 5 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP ;\n                       CAR ;\n                       DUP 6 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP 3 ;\n                       DIG 3 ;\n                       GET 11 ;\n                       UNIT ;\n                       SOME ;\n                       DUP 4 ;\n                       GET 4 ;\n                       DUP 5 ;\n                       GET 3 ;\n                       PAIR ;\n                       DUP 5 ;\n                       CAR ;\n                       PAIR ;\n                       UPDATE ;\n                       UPDATE 11 ;\n                       DUG 2 ;\n                       SWAP ;\n                       PUSH bool True ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       DIG 4 ;\n                       CAR ;\n                       PAIR 4 ;\n                       EMIT %operator_update\n                         (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) }\n                     { DUP 3 ;\n                       DUP 2 ;\n                       GET 4 ;\n                       PAIR ;\n                       DUP 5 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP ;\n                       CAR ;\n                       DUP 6 ;\n                       SWAP ;\n                       EXEC ;\n                       DROP ;\n                       DUP 3 ;\n                       DIG 3 ;\n                       GET 11 ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       PAIR ;\n                       DUP 4 ;\n                       CAR ;\n                       PAIR ;\n                       NONE unit ;\n                       SWAP ;\n                       UPDATE ;\n                       UPDATE 11 ;\n                       DUG 2 ;\n                       SWAP ;\n                       PUSH bool False ;\n                       DUP 3 ;\n                       GET 4 ;\n                       DUP 4 ;\n                       GET 3 ;\n                       DIG 4 ;\n                       CAR ;\n                       PAIR 4 ;\n                       EMIT %operator_update\n                         (pair (address %owner) (address %operator) (nat %token_id) (bool %is_operator)) } ;\n                   CONS } ;\n            DIG 2 ;\n            DIG 3 ;\n            DROP 2 } } ;\n    PAIR } }",
  "{ PUSH (pair (lambda\n                (pair nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                unit)\n             (lambda\n                (pair (pair address nat)\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                nat)\n             (lambda\n                (pair nat\n                      (big_map string bytes)\n                      address\n                      nat\n                      (big_map nat nat)\n                      (big_map (pair address nat) nat)\n                      (big_map (pair address address nat) unit)\n                      (big_map nat (pair nat (map string bytes)))\n                      (big_map nat (pair nat (map address nat)))\n                      (big_map nat nat)\n                      nat\n                      (map address nat))\n                nat))\n       (Pair { UNPAIR ;\n               SWAP ;\n               GET 5 ;\n               SWAP ;\n               COMPARE ;\n               LT ;\n               IF { UNIT } { PUSH string \"FA2_TOKEN_UNDEFINED\" ; FAILWITH } }\n             { UNPAIR ;\n               UNPAIR ;\n               DIG 2 ;\n               GET 9 ;\n               DUG 2 ;\n               PAIR ;\n               GET ;\n               IF_NONE { PUSH nat 0 } {} }\n             { UNPAIR ; SWAP ; GET 7 ; SWAP ; GET ; IF_NONE { PUSH nat 0 } {} }) ;\n  PAIR ;\n  { UNPAIR ;\n    UNPAIR 3 ;\n    DIG 3 ;\n    UNPAIR ;\n    IF_LEFT\n      { IF_LEFT\n          { SWAP ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            PAIR ;\n            SENDER ;\n            DUP 4 ;\n            CAR ;\n            DIG 2 ;\n            UNPAIR ;\n            PUSH bool True ;\n            DIG 2 ;\n            GET 11 ;\n            DIG 2 ;\n            DUP 5 ;\n            PAIR ;\n            DUP 4 ;\n            PAIR ;\n            MEM ;\n            DIG 3 ;\n            DIG 3 ;\n            COMPARE ;\n            EQ ;\n            OR ;\n            COMPARE ;\n            EQ ;\n            IF {} { PUSH string \"FA2_NOT_OPERATOR\" ; FAILWITH } ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            PAIR ;\n            DIG 3 ;\n            SWAP ;\n            EXEC ;\n            DROP ;\n            DUP ;\n            DUP 3 ;\n            GET 3 ;\n            DUP 4 ;\n            CAR ;\n            PAIR ;\n            PAIR ;\n            DIG 3 ;\n            SWAP ;\n            EXEC ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 2 ;\n            COMPARE ;\n            GE ;\n            IF {} { PUSH string \"FA2_INSUFFICIENT_BALANCE\" ; FAILWITH } ;\n            DUP 3 ;\n            GET 4 ;\n            SWAP ;\n            SUB ;\n            ABS ;\n            DUP 2 ;\n            DIG 2 ;\n            GET 9 ;\n            DUP 3 ;\n            DUP 5 ;\n            GET 3 ;\n            DUP 6 ;\n            CAR ;\n            PAIR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 9 ;\n            SWAP ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 3 ;\n            DUP 5 ;\n            GET 3 ;\n            PAIR ;\n            DIG 5 ;\n            SWAP ;\n            EXEC ;\n            SUB ;\n            ABS ;\n            DUP 3 ;\n            DIG 3 ;\n            GET 7 ;\n            DUP 3 ;\n            DUP 6 ;\n            GET 3 ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 7 ;\n            DUG 2 ;\n            NIL operation ;\n            DUP 4 ;\n            GET 3 ;\n            SELF_ADDRESS ;\n            VIEW \"get_burn_hooks\" (set address) ;\n            IF_NONE { EMPTY_SET address } {} ;\n            ITER { CONTRACT %burn_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n                   IF_NONE { PUSH string \"FA_BURN_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 7 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            PUSH int -1 ;\n            DUP 6 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DIG 2 ;\n            DUP 6 ;\n            GET 3 ;\n            NIL (pair address int) ;\n            PUSH int -1 ;\n            DUP 9 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DUP 9 ;\n            CAR ;\n            PAIR ;\n            CONS ;\n            PAIR 4 ;\n            EMIT %total_supply_update\n              (pair (list %owner_diffs (pair (address %owner) (int %owner_diff)))\n                    (nat %token_id)\n                    (nat %new_total_supply)\n                    (int %diff)) ;\n            CONS ;\n            PUSH int -1 ;\n            DUP 5 ;\n            GET 4 ;\n            INT ;\n            MUL ;\n            DIG 2 ;\n            DUP 5 ;\n            GET 3 ;\n            DIG 5 ;\n            CAR ;\n            PAIR 4 ;\n            EMIT %balance_update\n              (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) }\n          { DIG 2 ;\n            DIG 3 ;\n            DIG 4 ;\n            DROP 3 ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_CREATOR_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            SWAP ;\n            GET 3 ;\n            SWAP ;\n            SELF_ADDRESS ;\n            PAIR ;\n            VIEW \"is_creator\" bool ;\n            IF_NONE { PUSH bool False } {} ;\n            IF { DROP } { FAILWITH } ;\n            PUSH string \"FA2_DUP_TOKEN_ID\" ;\n            PUSH bool False ;\n            DUP 3 ;\n            GET 13 ;\n            DUP 5 ;\n            CAR ;\n            CAR ;\n            MEM ;\n            COMPARE ;\n            EQ ;\n            IF { DROP } { FAILWITH } ;\n            DUP ;\n            GET 13 ;\n            DUP 3 ;\n            CAR ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 13 ;\n            DUP ;\n            GET 15 ;\n            DUP 3 ;\n            GET 3 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 15 ;\n            DUP ;\n            GET 7 ;\n            PUSH nat 0 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 7 ;\n            DUP ;\n            PUSH nat 1 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            ADD ;\n            DIG 2 ;\n            GET 5 ;\n            DUP 2 ;\n            DUP 2 ;\n            COMPARE ;\n            GT ;\n            IF { SWAP ; DROP } { DROP } ;\n            UPDATE 5 ;\n            DUP ;\n            GET 17 ;\n            DUP 3 ;\n            GET 4 ;\n            DUP 4 ;\n            CAR ;\n            CAR ;\n            SWAP ;\n            SOME ;\n            SWAP ;\n            UPDATE ;\n            UPDATE 17 ;\n            NIL operation ;\n            DUP 2 ;\n            GET 3 ;\n            SELF_ADDRESS ;\n            VIEW \"get_create_hooks\" (set address) ;\n            IF_NONE { EMPTY_SET address } {} ;\n            ITER { CONTRACT %create_hook\n                     (pair (pair %token_metadata (nat %token_id) (map %token_info string bytes))\n                           (pair %royalties (nat %total_shares) (map %shares address nat))\n                           (nat %max_supply)) ;\n                   IF_NONE { PUSH string \"FA_CREATE_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            DUP 3 ;\n            CAR ;\n            CDR ;\n            SOME ;\n            DIG 3 ;\n            CAR ;\n            CAR ;\n            PAIR ;\n            EMIT %token_metadata_update\n              (pair (nat %token_id) (option %new_metadata (map string bytes))) } }\n      { SWAP ;\n        PUSH string \"FA2_INVALID_MINTER_ACCESS\" ;\n        DUP 2 ;\n        SENDER ;\n        SWAP ;\n        GET 3 ;\n        SWAP ;\n        SELF_ADDRESS ;\n        PAIR ;\n        VIEW \"is_minter\" bool ;\n        IF_NONE { PUSH bool False } {} ;\n        IF { DROP } { FAILWITH } ;\n        DUP ;\n        DUP 3 ;\n        GET 3 ;\n        PAIR ;\n        DIG 3 ;\n        SWAP ;\n        EXEC ;\n        DROP ;\n        DUP 2 ;\n        GET 4 ;\n        DUP 2 ;\n        DUP 4 ;\n        GET 3 ;\n        DUP 5 ;\n        CAR ;\n        PAIR ;\n        PAIR ;\n        DIG 4 ;\n        SWAP ;\n        EXEC ;\n        ADD ;\n        DUP 2 ;\n        DIG 2 ;\n        GET 9 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        DUP 6 ;\n        CAR ;\n        PAIR ;\n        SWAP ;\n        SOME ;\n        SWAP ;\n        UPDATE ;\n        UPDATE 9 ;\n        SWAP ;\n        DUP 3 ;\n        GET 4 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        PAIR ;\n        DIG 5 ;\n        SWAP ;\n        EXEC ;\n        ADD ;\n        DUP 3 ;\n        DIG 3 ;\n        GET 7 ;\n        DUP 3 ;\n        DUP 6 ;\n        GET 3 ;\n        SWAP ;\n        SOME ;\n        SWAP ;\n        UPDATE ;\n        UPDATE 7 ;\n        DUG 2 ;\n        DUP 3 ;\n        DUP 5 ;\n        GET 3 ;\n        SWAP ;\n        GET 17 ;\n        SWAP ;\n        GET ;\n        IF_NONE { PUSH nat 0 } {} ;\n        DUP 2 ;\n        COMPARE ;\n        LE ;\n        IF {} { PUSH string \"FA2_MAX_SUPPLY_EXCEEDED\" ; FAILWITH } ;\n        NIL operation ;\n        DUP 4 ;\n        GET 3 ;\n        SELF_ADDRESS ;\n        VIEW \"get_mint_hooks\" (set address) ;\n        IF_NONE { EMPTY_SET address } {} ;\n        ITER { CONTRACT %mint_hook (pair (address %owner) (nat %token_id) (nat %amount)) ;\n               IF_NONE { PUSH string \"FA_MINT_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n               PUSH mutez 0 ;\n               DUP 7 ;\n               TRANSFER_TOKENS ;\n               CONS } ;\n        DUP 5 ;\n        GET 4 ;\n        INT ;\n        DIG 2 ;\n        DUP 6 ;\n        GET 3 ;\n        NIL (pair address int) ;\n        DUP 8 ;\n        GET 4 ;\n        INT ;\n        DUP 9 ;\n        CAR ;\n        PAIR ;\n        CONS ;\n        PAIR 4 ;\n        EMIT %total_supply_update\n          (pair (list %owner_diffs (pair (address %owner) (int %owner_diff)))\n                (nat %token_id)\n                (nat %new_total_supply)\n                (int %diff)) ;\n        CONS ;\n        DUP 4 ;\n        GET 4 ;\n        INT ;\n        DIG 2 ;\n        DUP 5 ;\n        GET 3 ;\n        DIG 5 ;\n        CAR ;\n        PAIR 4 ;\n        EMIT %balance_update\n          (pair (address %owner) (nat %token_id) (nat %new_balance) (int %diff)) } ;\n    CONS ;\n    PAIR } }",
  "{ PUSH (lambda\n          (pair address\n                (big_map string bytes)\n                address\n                nat\n                (big_map nat nat)\n                (big_map (pair address nat) nat)\n                (big_map (pair address address nat) unit)\n                (big_map nat (pair nat (map string bytes)))\n                (big_map nat (pair nat (map address nat)))\n                (big_map nat nat)\n                nat\n                (map address nat))\n          bool)\n       { UNPAIR ;\n         SWAP ;\n         GET 3 ;\n         SWAP ;\n         SELF_ADDRESS ;\n         PAIR ;\n         VIEW \"is_royalties_manager\" bool ;\n         IF_NONE { PUSH bool False } {} } ;\n  PAIR ;\n  { UNPAIR ;\n    SWAP ;\n    UNPAIR ;\n    IF_LEFT\n      { IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_OWNER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            SWAP ;\n            GET 3 ;\n            SWAP ;\n            SELF_ADDRESS ;\n            PAIR ;\n            VIEW \"is_owner\" bool ;\n            IF_NONE { PUSH bool False } {} ;\n            IF { DROP } { FAILWITH } ;\n            EMPTY_BIG_MAP string bytes ;\n            UPDATE 1 ;\n            SWAP ;\n            ITER { UNPAIR ;\n                   DUP 3 ;\n                   DIG 3 ;\n                   CAR ;\n                   DIG 3 ;\n                   DIG 3 ;\n                   SWAP ;\n                   SOME ;\n                   SWAP ;\n                   UPDATE ;\n                   UPDATE 1 } }\n          { SWAP ;\n            PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            PAIR ;\n            DIG 4 ;\n            SWAP ;\n            EXEC ;\n            IF { DROP } { FAILWITH } ;\n            SWAP ;\n            UPDATE 18 } ;\n        NIL operation }\n      { IF_LEFT\n          { DIG 2 ;\n            DROP ;\n            SWAP ;\n            PUSH string \"FA2_INVALID_METADATA_MANAGER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            SWAP ;\n            GET 3 ;\n            SWAP ;\n            SELF_ADDRESS ;\n            PAIR ;\n            VIEW \"is_metadata_manager\" bool ;\n            IF_NONE { PUSH bool False } {} ;\n            IF { DROP } { FAILWITH } ;\n            NIL operation ;\n            DUP 3 ;\n            ITER { UNPAIR ;\n                   DUP 2 ;\n                   CAR ;\n                   DUP 2 ;\n                   COMPARE ;\n                   EQ ;\n                   IF {} { PUSH string \"FA2_TOKEN_ID_MISMATCH\" ; FAILWITH } ;\n                   DUP 4 ;\n                   DIG 4 ;\n                   GET 13 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   SWAP ;\n                   SOME ;\n                   SWAP ;\n                   UPDATE ;\n                   UPDATE 13 ;\n                   DUG 3 ;\n                   DUG 2 ;\n                   CDR ;\n                   SOME ;\n                   DIG 2 ;\n                   PAIR ;\n                   EMIT %token_metadata_update\n                     (pair (nat %token_id) (option %new_metadata (map string bytes))) ;\n                   CONS } ;\n            DUP 2 ;\n            GET 3 ;\n            SELF_ADDRESS ;\n            VIEW \"get_update_metadata_hooks\" (set address) ;\n            IF_NONE { EMPTY_SET address } {} ;\n            ITER { CONTRACT %update_metadata_hook\n                     (map nat (pair (nat %token_id) (map %token_info string bytes))) ;\n                   IF_NONE { PUSH string \"FA_UPDATE_METADATA_HOOK_UNDEFINED\" ; FAILWITH } {} ;\n                   PUSH mutez 0 ;\n                   DUP 5 ;\n                   TRANSFER_TOKENS ;\n                   CONS } ;\n            DIG 2 ;\n            DROP }\n          { SWAP ;\n            PUSH string \"FA2_INVALID_ROYALTIES_MANAGER_ACCESS\" ;\n            DUP 2 ;\n            SENDER ;\n            PAIR ;\n            DIG 4 ;\n            SWAP ;\n            EXEC ;\n            IF { DROP } { FAILWITH } ;\n            NIL operation ;\n            DIG 2 ;\n            ITER { UNPAIR ;\n                   DUP 4 ;\n                   DIG 4 ;\n                   GET 15 ;\n                   DUP 4 ;\n                   DUP 4 ;\n                   SWAP ;\n                   SOME ;\n                   SWAP ;\n                   UPDATE ;\n                   UPDATE 15 ;\n                   DUG 3 ;\n                   DUG 2 ;\n                   SOME ;\n                   DIG 2 ;\n                   PAIR ;\n                   EMIT %token_royalties_update\n                     (pair (nat %token_id)\n                           (option %new_royalties (pair (nat %total_shares) (map %shares address nat)))) ;\n                   CONS } } } ;\n    PAIR } }"

]
